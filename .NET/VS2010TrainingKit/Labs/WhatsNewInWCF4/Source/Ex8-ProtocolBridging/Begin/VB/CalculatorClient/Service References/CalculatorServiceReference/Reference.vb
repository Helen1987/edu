' ----------------------------------------------------------------------------------
' Microsoft Developer & Platform Evangelism
' 
' Copyright (c) Microsoft Corporation. All rights reserved.
' 
' THIS CODE AND INFORMATION ARE PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND, 
' EITHER EXPRESSED OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE IMPLIED WARRANTIES 
' OF MERCHANTABILITY AND/OR FITNESS FOR A PARTICULAR PURPOSE.
' ----------------------------------------------------------------------------------
' The example companies, organizations, products, domain names,
' e-mail addresses, logos, people, places, and events depicted
' herein are fictitious.  No association with any real company,
' organization, product, domain name, email address, logo, person,
' places, or events is intended or should be inferred.
' ----------------------------------------------------------------------------------

'------------------------------------------------------------------------------
' <auto-generated>
'     This code was generated by a tool.
'     Runtime Version:4.0.21006.1
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated.
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict On
Option Explicit On


Namespace CalculatorServiceReference
    
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0"),  _
     System.ServiceModel.ServiceContractAttribute([Namespace]:="http://Microsoft.ServiceModel.Samples", ConfigurationName:="CalculatorServiceReference.ICalculatorService")>  _
    Public Interface ICalculatorService
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://Microsoft.ServiceModel.Samples/ICalculatorService/Add", ReplyAction:="http://Microsoft.ServiceModel.Samples/ICalculatorService/AddResponse")>  _
        Function Add(ByVal n1 As Double, ByVal n2 As Double) As Double
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://Microsoft.ServiceModel.Samples/ICalculatorService/Subtract", ReplyAction:="http://Microsoft.ServiceModel.Samples/ICalculatorService/SubtractResponse")>  _
        Function Subtract(ByVal n1 As Double, ByVal n2 As Double) As Double
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://Microsoft.ServiceModel.Samples/ICalculatorService/Multiply", ReplyAction:="http://Microsoft.ServiceModel.Samples/ICalculatorService/MultiplyResponse")>  _
        Function Multiply(ByVal n1 As Double, ByVal n2 As Double) As Double
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://Microsoft.ServiceModel.Samples/ICalculatorService/Divide", ReplyAction:="http://Microsoft.ServiceModel.Samples/ICalculatorService/DivideResponse")>  _
        Function Divide(ByVal n1 As Double, ByVal n2 As Double) As Double
    End Interface
    
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")>  _
    Public Interface ICalculatorServiceChannel
        Inherits CalculatorServiceReference.ICalculatorService, System.ServiceModel.IClientChannel
    End Interface
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")>  _
    Partial Public Class CalculatorServiceClient
        Inherits System.ServiceModel.ClientBase(Of CalculatorServiceReference.ICalculatorService)
        Implements CalculatorServiceReference.ICalculatorService
        
        Public Sub New()
            MyBase.New
        End Sub
        
        Public Sub New(ByVal endpointConfigurationName As String)
            MyBase.New(endpointConfigurationName)
        End Sub
        
        Public Sub New(ByVal endpointConfigurationName As String, ByVal remoteAddress As String)
            MyBase.New(endpointConfigurationName, remoteAddress)
        End Sub
        
        Public Sub New(ByVal endpointConfigurationName As String, ByVal remoteAddress As System.ServiceModel.EndpointAddress)
            MyBase.New(endpointConfigurationName, remoteAddress)
        End Sub
        
        Public Sub New(ByVal binding As System.ServiceModel.Channels.Binding, ByVal remoteAddress As System.ServiceModel.EndpointAddress)
            MyBase.New(binding, remoteAddress)
        End Sub
        
        Public Function Add(ByVal n1 As Double, ByVal n2 As Double) As Double Implements CalculatorServiceReference.ICalculatorService.Add
            Return MyBase.Channel.Add(n1, n2)
        End Function
        
        Public Function Subtract(ByVal n1 As Double, ByVal n2 As Double) As Double Implements CalculatorServiceReference.ICalculatorService.Subtract
            Return MyBase.Channel.Subtract(n1, n2)
        End Function
        
        Public Function Multiply(ByVal n1 As Double, ByVal n2 As Double) As Double Implements CalculatorServiceReference.ICalculatorService.Multiply
            Return MyBase.Channel.Multiply(n1, n2)
        End Function
        
        Public Function Divide(ByVal n1 As Double, ByVal n2 As Double) As Double Implements CalculatorServiceReference.ICalculatorService.Divide
            Return MyBase.Channel.Divide(n1, n2)
        End Function
    End Class
End Namespace
