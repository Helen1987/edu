' ----------------------------------------------------------------------------------
' Microsoft Developer & Platform Evangelism
' 
' Copyright (c) Microsoft Corporation. All rights reserved.
' 
' THIS CODE AND INFORMATION ARE PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND, 
' EITHER EXPRESSED OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE IMPLIED WARRANTIES 
' OF MERCHANTABILITY AND/OR FITNESS FOR A PARTICULAR PURPOSE.
' ----------------------------------------------------------------------------------
' The example companies, organizations, products, domain names,
' e-mail addresses, logos, people, places, and events depicted
' herein are fictitious.  No association with any real company,
' organization, product, domain name, email address, logo, person,
' places, or events is intended or should be inferred.
' ----------------------------------------------------------------------------------

'------------------------------------------------------------------------------
' <auto-generated>
'     This code was generated by a tool.
'     Runtime Version:4.0.30319.1
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated.
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict On
Option Explicit On

Imports System
Imports System.Runtime.Serialization

'
'This code was auto-generated by Microsoft.Silverlight.ServiceReference, version 4.0.50826.0
'
Namespace CustomerService.Proxies
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0"),  _
     System.Runtime.Serialization.DataContractAttribute(Name:="Customer", [Namespace]:="http://schemas.datacontract.org/2004/07/")>  _
    Partial Public Class Customer
        Inherits Object
        Implements System.ComponentModel.INotifyPropertyChanged
        
        Private ChangeTrackerField As CustomerService.Proxies.ObjectChangeTracker
        
        Private CompanyNameField As String
        
        Private CustomerAddressesField As System.Collections.ObjectModel.ObservableCollection(Of CustomerService.Proxies.CustomerAddress)
        
        Private CustomerIDField As Integer
        
        Private EmailAddressField As String
        
        Private FirstNameField As String
        
        Private LastNameField As String
        
        Private MiddleNameField As String
        
        Private ModifiedDateField As Date
        
        Private NameStyleField As Boolean
        
        Private PasswordHashField As String
        
        Private PasswordSaltField As String
        
        Private PhoneField As String
        
        Private SalesOrderHeadersField As System.Collections.ObjectModel.ObservableCollection(Of CustomerService.Proxies.SalesOrderHeader)
        
        Private SalesPersonField As String
        
        Private SuffixField As String
        
        Private TitleField As String
        
        Private rowguidField As System.Guid
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property ChangeTracker() As CustomerService.Proxies.ObjectChangeTracker
            Get
                Return Me.ChangeTrackerField
            End Get
            Set
                If (Object.ReferenceEquals(Me.ChangeTrackerField, value) <> true) Then
                    Me.ChangeTrackerField = value
                    Me.RaisePropertyChanged("ChangeTracker")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property CompanyName() As String
            Get
                Return Me.CompanyNameField
            End Get
            Set
                If (Object.ReferenceEquals(Me.CompanyNameField, value) <> true) Then
                    Me.CompanyNameField = value
                    Me.RaisePropertyChanged("CompanyName")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property CustomerAddresses() As System.Collections.ObjectModel.ObservableCollection(Of CustomerService.Proxies.CustomerAddress)
            Get
                Return Me.CustomerAddressesField
            End Get
            Set
                If (Object.ReferenceEquals(Me.CustomerAddressesField, value) <> true) Then
                    Me.CustomerAddressesField = value
                    Me.RaisePropertyChanged("CustomerAddresses")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property CustomerID() As Integer
            Get
                Return Me.CustomerIDField
            End Get
            Set
                If (Me.CustomerIDField.Equals(value) <> true) Then
                    Me.CustomerIDField = value
                    Me.RaisePropertyChanged("CustomerID")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property EmailAddress() As String
            Get
                Return Me.EmailAddressField
            End Get
            Set
                If (Object.ReferenceEquals(Me.EmailAddressField, value) <> true) Then
                    Me.EmailAddressField = value
                    Me.RaisePropertyChanged("EmailAddress")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property FirstName() As String
            Get
                Return Me.FirstNameField
            End Get
            Set
                If (Object.ReferenceEquals(Me.FirstNameField, value) <> true) Then
                    Me.FirstNameField = value
                    Me.RaisePropertyChanged("FirstName")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property LastName() As String
            Get
                Return Me.LastNameField
            End Get
            Set
                If (Object.ReferenceEquals(Me.LastNameField, value) <> true) Then
                    Me.LastNameField = value
                    Me.RaisePropertyChanged("LastName")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property MiddleName() As String
            Get
                Return Me.MiddleNameField
            End Get
            Set
                If (Object.ReferenceEquals(Me.MiddleNameField, value) <> true) Then
                    Me.MiddleNameField = value
                    Me.RaisePropertyChanged("MiddleName")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property ModifiedDate() As Date
            Get
                Return Me.ModifiedDateField
            End Get
            Set
                If (Me.ModifiedDateField.Equals(value) <> true) Then
                    Me.ModifiedDateField = value
                    Me.RaisePropertyChanged("ModifiedDate")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property NameStyle() As Boolean
            Get
                Return Me.NameStyleField
            End Get
            Set
                If (Me.NameStyleField.Equals(value) <> true) Then
                    Me.NameStyleField = value
                    Me.RaisePropertyChanged("NameStyle")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property PasswordHash() As String
            Get
                Return Me.PasswordHashField
            End Get
            Set
                If (Object.ReferenceEquals(Me.PasswordHashField, value) <> true) Then
                    Me.PasswordHashField = value
                    Me.RaisePropertyChanged("PasswordHash")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property PasswordSalt() As String
            Get
                Return Me.PasswordSaltField
            End Get
            Set
                If (Object.ReferenceEquals(Me.PasswordSaltField, value) <> true) Then
                    Me.PasswordSaltField = value
                    Me.RaisePropertyChanged("PasswordSalt")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property Phone() As String
            Get
                Return Me.PhoneField
            End Get
            Set
                If (Object.ReferenceEquals(Me.PhoneField, value) <> true) Then
                    Me.PhoneField = value
                    Me.RaisePropertyChanged("Phone")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property SalesOrderHeaders() As System.Collections.ObjectModel.ObservableCollection(Of CustomerService.Proxies.SalesOrderHeader)
            Get
                Return Me.SalesOrderHeadersField
            End Get
            Set
                If (Object.ReferenceEquals(Me.SalesOrderHeadersField, value) <> true) Then
                    Me.SalesOrderHeadersField = value
                    Me.RaisePropertyChanged("SalesOrderHeaders")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property SalesPerson() As String
            Get
                Return Me.SalesPersonField
            End Get
            Set
                If (Object.ReferenceEquals(Me.SalesPersonField, value) <> true) Then
                    Me.SalesPersonField = value
                    Me.RaisePropertyChanged("SalesPerson")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property Suffix() As String
            Get
                Return Me.SuffixField
            End Get
            Set
                If (Object.ReferenceEquals(Me.SuffixField, value) <> true) Then
                    Me.SuffixField = value
                    Me.RaisePropertyChanged("Suffix")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property Title() As String
            Get
                Return Me.TitleField
            End Get
            Set
                If (Object.ReferenceEquals(Me.TitleField, value) <> true) Then
                    Me.TitleField = value
                    Me.RaisePropertyChanged("Title")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property rowguid() As System.Guid
            Get
                Return Me.rowguidField
            End Get
            Set
                If (Me.rowguidField.Equals(value) <> true) Then
                    Me.rowguidField = value
                    Me.RaisePropertyChanged("rowguid")
                End If
            End Set
        End Property
        
        Public Event PropertyChanged As System.ComponentModel.PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
        
        Protected Sub RaisePropertyChanged(ByVal propertyName As String)
            Dim propertyChanged As System.ComponentModel.PropertyChangedEventHandler = Me.PropertyChangedEvent
            If (Not (propertyChanged) Is Nothing) Then
                propertyChanged(Me, New System.ComponentModel.PropertyChangedEventArgs(propertyName))
            End If
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0"),  _
     System.Runtime.Serialization.DataContractAttribute(Name:="ObjectChangeTracker", [Namespace]:="http://schemas.datacontract.org/2004/07/")>  _
    Partial Public Class ObjectChangeTracker
        Inherits Object
        Implements System.ComponentModel.INotifyPropertyChanged
        
        Private ExtendedPropertiesField As CustomerService.Proxies.ExtendedPropertiesDictionary
        
        Private ObjectsAddedToCollectionPropertiesField As CustomerService.Proxies.ObjectsAddedToCollectionProperties
        
        Private ObjectsRemovedFromCollectionPropertiesField As CustomerService.Proxies.ObjectsRemovedFromCollectionProperties
        
        Private OriginalValuesField As CustomerService.Proxies.OriginalValuesDictionary
        
        Private StateField As CustomerService.Proxies.ObjectState
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property ExtendedProperties() As CustomerService.Proxies.ExtendedPropertiesDictionary
            Get
                Return Me.ExtendedPropertiesField
            End Get
            Set
                If (Object.ReferenceEquals(Me.ExtendedPropertiesField, value) <> true) Then
                    Me.ExtendedPropertiesField = value
                    Me.RaisePropertyChanged("ExtendedProperties")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property ObjectsAddedToCollectionProperties() As CustomerService.Proxies.ObjectsAddedToCollectionProperties
            Get
                Return Me.ObjectsAddedToCollectionPropertiesField
            End Get
            Set
                If (Object.ReferenceEquals(Me.ObjectsAddedToCollectionPropertiesField, value) <> true) Then
                    Me.ObjectsAddedToCollectionPropertiesField = value
                    Me.RaisePropertyChanged("ObjectsAddedToCollectionProperties")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property ObjectsRemovedFromCollectionProperties() As CustomerService.Proxies.ObjectsRemovedFromCollectionProperties
            Get
                Return Me.ObjectsRemovedFromCollectionPropertiesField
            End Get
            Set
                If (Object.ReferenceEquals(Me.ObjectsRemovedFromCollectionPropertiesField, value) <> true) Then
                    Me.ObjectsRemovedFromCollectionPropertiesField = value
                    Me.RaisePropertyChanged("ObjectsRemovedFromCollectionProperties")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property OriginalValues() As CustomerService.Proxies.OriginalValuesDictionary
            Get
                Return Me.OriginalValuesField
            End Get
            Set
                If (Object.ReferenceEquals(Me.OriginalValuesField, value) <> true) Then
                    Me.OriginalValuesField = value
                    Me.RaisePropertyChanged("OriginalValues")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property State() As CustomerService.Proxies.ObjectState
            Get
                Return Me.StateField
            End Get
            Set
                If (Me.StateField.Equals(value) <> true) Then
                    Me.StateField = value
                    Me.RaisePropertyChanged("State")
                End If
            End Set
        End Property
        
        Public Event PropertyChanged As System.ComponentModel.PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
        
        Protected Sub RaisePropertyChanged(ByVal propertyName As String)
            Dim propertyChanged As System.ComponentModel.PropertyChangedEventHandler = Me.PropertyChangedEvent
            If (Not (propertyChanged) Is Nothing) Then
                propertyChanged(Me, New System.ComponentModel.PropertyChangedEventArgs(propertyName))
            End If
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0"),  _
     System.Runtime.Serialization.DataContractAttribute(Name:="CustomerAddress", [Namespace]:="http://schemas.datacontract.org/2004/07/")>  _
    Partial Public Class CustomerAddress
        Inherits Object
        Implements System.ComponentModel.INotifyPropertyChanged
        
        Private AddressField As CustomerService.Proxies.Address
        
        Private AddressIDField As Integer
        
        Private AddressTypeField As String
        
        Private ChangeTrackerField As CustomerService.Proxies.ObjectChangeTracker
        
        Private CustomerField As CustomerService.Proxies.Customer
        
        Private CustomerIDField As Integer
        
        Private ModifiedDateField As Date
        
        Private rowguidField As System.Guid
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property Address() As CustomerService.Proxies.Address
            Get
                Return Me.AddressField
            End Get
            Set
                If (Object.ReferenceEquals(Me.AddressField, value) <> true) Then
                    Me.AddressField = value
                    Me.RaisePropertyChanged("Address")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property AddressID() As Integer
            Get
                Return Me.AddressIDField
            End Get
            Set
                If (Me.AddressIDField.Equals(value) <> true) Then
                    Me.AddressIDField = value
                    Me.RaisePropertyChanged("AddressID")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property AddressType() As String
            Get
                Return Me.AddressTypeField
            End Get
            Set
                If (Object.ReferenceEquals(Me.AddressTypeField, value) <> true) Then
                    Me.AddressTypeField = value
                    Me.RaisePropertyChanged("AddressType")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property ChangeTracker() As CustomerService.Proxies.ObjectChangeTracker
            Get
                Return Me.ChangeTrackerField
            End Get
            Set
                If (Object.ReferenceEquals(Me.ChangeTrackerField, value) <> true) Then
                    Me.ChangeTrackerField = value
                    Me.RaisePropertyChanged("ChangeTracker")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property Customer() As CustomerService.Proxies.Customer
            Get
                Return Me.CustomerField
            End Get
            Set
                If (Object.ReferenceEquals(Me.CustomerField, value) <> true) Then
                    Me.CustomerField = value
                    Me.RaisePropertyChanged("Customer")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property CustomerID() As Integer
            Get
                Return Me.CustomerIDField
            End Get
            Set
                If (Me.CustomerIDField.Equals(value) <> true) Then
                    Me.CustomerIDField = value
                    Me.RaisePropertyChanged("CustomerID")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property ModifiedDate() As Date
            Get
                Return Me.ModifiedDateField
            End Get
            Set
                If (Me.ModifiedDateField.Equals(value) <> true) Then
                    Me.ModifiedDateField = value
                    Me.RaisePropertyChanged("ModifiedDate")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property rowguid() As System.Guid
            Get
                Return Me.rowguidField
            End Get
            Set
                If (Me.rowguidField.Equals(value) <> true) Then
                    Me.rowguidField = value
                    Me.RaisePropertyChanged("rowguid")
                End If
            End Set
        End Property
        
        Public Event PropertyChanged As System.ComponentModel.PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
        
        Protected Sub RaisePropertyChanged(ByVal propertyName As String)
            Dim propertyChanged As System.ComponentModel.PropertyChangedEventHandler = Me.PropertyChangedEvent
            If (Not (propertyChanged) Is Nothing) Then
                propertyChanged(Me, New System.ComponentModel.PropertyChangedEventArgs(propertyName))
            End If
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0"),  _
     System.Runtime.Serialization.DataContractAttribute(Name:="SalesOrderHeader", [Namespace]:="http://schemas.datacontract.org/2004/07/")>  _
    Partial Public Class SalesOrderHeader
        Inherits Object
        Implements System.ComponentModel.INotifyPropertyChanged
        
        Private AccountNumberField As String
        
        Private AddressField As CustomerService.Proxies.Address
        
        Private Address1Field As CustomerService.Proxies.Address
        
        Private BillToAddressIDField As System.Nullable(Of Integer)
        
        Private ChangeTrackerField As CustomerService.Proxies.ObjectChangeTracker
        
        Private CommentField As String
        
        Private CreditCardApprovalCodeField As String
        
        Private CustomerField As CustomerService.Proxies.Customer
        
        Private CustomerIDField As Integer
        
        Private DueDateField As Date
        
        Private FreightField As Decimal
        
        Private ModifiedDateField As Date
        
        Private OnlineOrderFlagField As Boolean
        
        Private OrderDateField As Date
        
        Private PurchaseOrderNumberField As String
        
        Private RevisionNumberField As Byte
        
        Private SalesOrderDetailsField As System.Collections.ObjectModel.ObservableCollection(Of CustomerService.Proxies.SalesOrderDetail)
        
        Private SalesOrderIDField As Integer
        
        Private SalesOrderNumberField As String
        
        Private ShipDateField As System.Nullable(Of Date)
        
        Private ShipMethodField As String
        
        Private ShipToAddressIDField As System.Nullable(Of Integer)
        
        Private StatusField As Byte
        
        Private SubTotalField As Decimal
        
        Private TaxAmtField As Decimal
        
        Private TotalDueField As Decimal
        
        Private rowguidField As System.Guid
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property AccountNumber() As String
            Get
                Return Me.AccountNumberField
            End Get
            Set
                If (Object.ReferenceEquals(Me.AccountNumberField, value) <> true) Then
                    Me.AccountNumberField = value
                    Me.RaisePropertyChanged("AccountNumber")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property Address() As CustomerService.Proxies.Address
            Get
                Return Me.AddressField
            End Get
            Set
                If (Object.ReferenceEquals(Me.AddressField, value) <> true) Then
                    Me.AddressField = value
                    Me.RaisePropertyChanged("Address")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property Address1() As CustomerService.Proxies.Address
            Get
                Return Me.Address1Field
            End Get
            Set
                If (Object.ReferenceEquals(Me.Address1Field, value) <> true) Then
                    Me.Address1Field = value
                    Me.RaisePropertyChanged("Address1")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property BillToAddressID() As System.Nullable(Of Integer)
            Get
                Return Me.BillToAddressIDField
            End Get
            Set
                If (Me.BillToAddressIDField.Equals(value) <> true) Then
                    Me.BillToAddressIDField = value
                    Me.RaisePropertyChanged("BillToAddressID")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property ChangeTracker() As CustomerService.Proxies.ObjectChangeTracker
            Get
                Return Me.ChangeTrackerField
            End Get
            Set
                If (Object.ReferenceEquals(Me.ChangeTrackerField, value) <> true) Then
                    Me.ChangeTrackerField = value
                    Me.RaisePropertyChanged("ChangeTracker")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property Comment() As String
            Get
                Return Me.CommentField
            End Get
            Set
                If (Object.ReferenceEquals(Me.CommentField, value) <> true) Then
                    Me.CommentField = value
                    Me.RaisePropertyChanged("Comment")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property CreditCardApprovalCode() As String
            Get
                Return Me.CreditCardApprovalCodeField
            End Get
            Set
                If (Object.ReferenceEquals(Me.CreditCardApprovalCodeField, value) <> true) Then
                    Me.CreditCardApprovalCodeField = value
                    Me.RaisePropertyChanged("CreditCardApprovalCode")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property Customer() As CustomerService.Proxies.Customer
            Get
                Return Me.CustomerField
            End Get
            Set
                If (Object.ReferenceEquals(Me.CustomerField, value) <> true) Then
                    Me.CustomerField = value
                    Me.RaisePropertyChanged("Customer")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property CustomerID() As Integer
            Get
                Return Me.CustomerIDField
            End Get
            Set
                If (Me.CustomerIDField.Equals(value) <> true) Then
                    Me.CustomerIDField = value
                    Me.RaisePropertyChanged("CustomerID")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property DueDate() As Date
            Get
                Return Me.DueDateField
            End Get
            Set
                If (Me.DueDateField.Equals(value) <> true) Then
                    Me.DueDateField = value
                    Me.RaisePropertyChanged("DueDate")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property Freight() As Decimal
            Get
                Return Me.FreightField
            End Get
            Set
                If (Me.FreightField.Equals(value) <> true) Then
                    Me.FreightField = value
                    Me.RaisePropertyChanged("Freight")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property ModifiedDate() As Date
            Get
                Return Me.ModifiedDateField
            End Get
            Set
                If (Me.ModifiedDateField.Equals(value) <> true) Then
                    Me.ModifiedDateField = value
                    Me.RaisePropertyChanged("ModifiedDate")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property OnlineOrderFlag() As Boolean
            Get
                Return Me.OnlineOrderFlagField
            End Get
            Set
                If (Me.OnlineOrderFlagField.Equals(value) <> true) Then
                    Me.OnlineOrderFlagField = value
                    Me.RaisePropertyChanged("OnlineOrderFlag")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property OrderDate() As Date
            Get
                Return Me.OrderDateField
            End Get
            Set
                If (Me.OrderDateField.Equals(value) <> true) Then
                    Me.OrderDateField = value
                    Me.RaisePropertyChanged("OrderDate")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property PurchaseOrderNumber() As String
            Get
                Return Me.PurchaseOrderNumberField
            End Get
            Set
                If (Object.ReferenceEquals(Me.PurchaseOrderNumberField, value) <> true) Then
                    Me.PurchaseOrderNumberField = value
                    Me.RaisePropertyChanged("PurchaseOrderNumber")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property RevisionNumber() As Byte
            Get
                Return Me.RevisionNumberField
            End Get
            Set
                If (Me.RevisionNumberField.Equals(value) <> true) Then
                    Me.RevisionNumberField = value
                    Me.RaisePropertyChanged("RevisionNumber")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property SalesOrderDetails() As System.Collections.ObjectModel.ObservableCollection(Of CustomerService.Proxies.SalesOrderDetail)
            Get
                Return Me.SalesOrderDetailsField
            End Get
            Set
                If (Object.ReferenceEquals(Me.SalesOrderDetailsField, value) <> true) Then
                    Me.SalesOrderDetailsField = value
                    Me.RaisePropertyChanged("SalesOrderDetails")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property SalesOrderID() As Integer
            Get
                Return Me.SalesOrderIDField
            End Get
            Set
                If (Me.SalesOrderIDField.Equals(value) <> true) Then
                    Me.SalesOrderIDField = value
                    Me.RaisePropertyChanged("SalesOrderID")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property SalesOrderNumber() As String
            Get
                Return Me.SalesOrderNumberField
            End Get
            Set
                If (Object.ReferenceEquals(Me.SalesOrderNumberField, value) <> true) Then
                    Me.SalesOrderNumberField = value
                    Me.RaisePropertyChanged("SalesOrderNumber")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property ShipDate() As System.Nullable(Of Date)
            Get
                Return Me.ShipDateField
            End Get
            Set
                If (Me.ShipDateField.Equals(value) <> true) Then
                    Me.ShipDateField = value
                    Me.RaisePropertyChanged("ShipDate")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property ShipMethod() As String
            Get
                Return Me.ShipMethodField
            End Get
            Set
                If (Object.ReferenceEquals(Me.ShipMethodField, value) <> true) Then
                    Me.ShipMethodField = value
                    Me.RaisePropertyChanged("ShipMethod")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property ShipToAddressID() As System.Nullable(Of Integer)
            Get
                Return Me.ShipToAddressIDField
            End Get
            Set
                If (Me.ShipToAddressIDField.Equals(value) <> true) Then
                    Me.ShipToAddressIDField = value
                    Me.RaisePropertyChanged("ShipToAddressID")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property Status() As Byte
            Get
                Return Me.StatusField
            End Get
            Set
                If (Me.StatusField.Equals(value) <> true) Then
                    Me.StatusField = value
                    Me.RaisePropertyChanged("Status")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property SubTotal() As Decimal
            Get
                Return Me.SubTotalField
            End Get
            Set
                If (Me.SubTotalField.Equals(value) <> true) Then
                    Me.SubTotalField = value
                    Me.RaisePropertyChanged("SubTotal")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property TaxAmt() As Decimal
            Get
                Return Me.TaxAmtField
            End Get
            Set
                If (Me.TaxAmtField.Equals(value) <> true) Then
                    Me.TaxAmtField = value
                    Me.RaisePropertyChanged("TaxAmt")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property TotalDue() As Decimal
            Get
                Return Me.TotalDueField
            End Get
            Set
                If (Me.TotalDueField.Equals(value) <> true) Then
                    Me.TotalDueField = value
                    Me.RaisePropertyChanged("TotalDue")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property rowguid() As System.Guid
            Get
                Return Me.rowguidField
            End Get
            Set
                If (Me.rowguidField.Equals(value) <> true) Then
                    Me.rowguidField = value
                    Me.RaisePropertyChanged("rowguid")
                End If
            End Set
        End Property
        
        Public Event PropertyChanged As System.ComponentModel.PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
        
        Protected Sub RaisePropertyChanged(ByVal propertyName As String)
            Dim propertyChanged As System.ComponentModel.PropertyChangedEventHandler = Me.PropertyChangedEvent
            If (Not (propertyChanged) Is Nothing) Then
                propertyChanged(Me, New System.ComponentModel.PropertyChangedEventArgs(propertyName))
            End If
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0"),  _
     System.Runtime.Serialization.CollectionDataContractAttribute(Name:="ExtendedPropertiesDictionary", [Namespace]:="http://schemas.datacontract.org/2004/07/", ItemName:="ExtendedProperties", KeyName:="Name", ValueName:="ExtendedProperty")>  _
    Public Class ExtendedPropertiesDictionary
        Inherits System.Collections.Generic.Dictionary(Of String, Object)
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0"),  _
     System.Runtime.Serialization.CollectionDataContractAttribute(Name:="ObjectsAddedToCollectionProperties", [Namespace]:="http://schemas.datacontract.org/2004/07/", ItemName:="AddedObjectsForProperty", KeyName:="CollectionPropertyName", ValueName:="AddedObjects")>  _
    Public Class ObjectsAddedToCollectionProperties
        Inherits System.Collections.Generic.Dictionary(Of String, CustomerService.Proxies.ObjectList)
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0"),  _
     System.Runtime.Serialization.CollectionDataContractAttribute(Name:="ObjectsRemovedFromCollectionProperties", [Namespace]:="http://schemas.datacontract.org/2004/07/", ItemName:="DeletedObjectsForProperty", KeyName:="CollectionPropertyName", ValueName:="DeletedObjects")>  _
    Public Class ObjectsRemovedFromCollectionProperties
        Inherits System.Collections.Generic.Dictionary(Of String, CustomerService.Proxies.ObjectList)
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0"),  _
     System.Runtime.Serialization.CollectionDataContractAttribute(Name:="OriginalValuesDictionary", [Namespace]:="http://schemas.datacontract.org/2004/07/", ItemName:="OriginalValueForProperty", KeyName:="ReferencePropertyName", ValueName:="OriginalValue")>  _
    Public Class OriginalValuesDictionary
        Inherits System.Collections.Generic.Dictionary(Of String, Object)
    End Class
    
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0"),  _
     System.FlagsAttribute(),  _
     System.Runtime.Serialization.DataContractAttribute(Name:="ObjectState", [Namespace]:="http://schemas.datacontract.org/2004/07/")>  _
    Public Enum ObjectState As Integer
        
        <System.Runtime.Serialization.EnumMemberAttribute()>  _
        Unchanged = 1
        
        <System.Runtime.Serialization.EnumMemberAttribute()>  _
        Added = 2
        
        <System.Runtime.Serialization.EnumMemberAttribute()>  _
        Modified = 4
        
        <System.Runtime.Serialization.EnumMemberAttribute()>  _
        Deleted = 8
    End Enum
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0"),  _
     System.Runtime.Serialization.CollectionDataContractAttribute(Name:="ObjectList", [Namespace]:="http://schemas.datacontract.org/2004/07/", ItemName:="ObjectValue")>  _
    Public Class ObjectList
        Inherits System.Collections.ObjectModel.ObservableCollection(Of Object)
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0"),  _
     System.Runtime.Serialization.DataContractAttribute(Name:="Address", [Namespace]:="http://schemas.datacontract.org/2004/07/")>  _
    Partial Public Class Address
        Inherits Object
        Implements System.ComponentModel.INotifyPropertyChanged
        
        Private AddressIDField As Integer
        
        Private AddressLine1Field As String
        
        Private AddressLine2Field As String
        
        Private ChangeTrackerField As CustomerService.Proxies.ObjectChangeTracker
        
        Private CityField As String
        
        Private CountryRegionField As String
        
        Private CustomerAddressesField As System.Collections.ObjectModel.ObservableCollection(Of CustomerService.Proxies.CustomerAddress)
        
        Private ModifiedDateField As Date
        
        Private PostalCodeField As String
        
        Private SalesOrderHeadersField As System.Collections.ObjectModel.ObservableCollection(Of CustomerService.Proxies.SalesOrderHeader)
        
        Private SalesOrderHeaders1Field As System.Collections.ObjectModel.ObservableCollection(Of CustomerService.Proxies.SalesOrderHeader)
        
        Private StateProvinceField As String
        
        Private rowguidField As System.Guid
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property AddressID() As Integer
            Get
                Return Me.AddressIDField
            End Get
            Set
                If (Me.AddressIDField.Equals(value) <> true) Then
                    Me.AddressIDField = value
                    Me.RaisePropertyChanged("AddressID")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property AddressLine1() As String
            Get
                Return Me.AddressLine1Field
            End Get
            Set
                If (Object.ReferenceEquals(Me.AddressLine1Field, value) <> true) Then
                    Me.AddressLine1Field = value
                    Me.RaisePropertyChanged("AddressLine1")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property AddressLine2() As String
            Get
                Return Me.AddressLine2Field
            End Get
            Set
                If (Object.ReferenceEquals(Me.AddressLine2Field, value) <> true) Then
                    Me.AddressLine2Field = value
                    Me.RaisePropertyChanged("AddressLine2")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property ChangeTracker() As CustomerService.Proxies.ObjectChangeTracker
            Get
                Return Me.ChangeTrackerField
            End Get
            Set
                If (Object.ReferenceEquals(Me.ChangeTrackerField, value) <> true) Then
                    Me.ChangeTrackerField = value
                    Me.RaisePropertyChanged("ChangeTracker")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property City() As String
            Get
                Return Me.CityField
            End Get
            Set
                If (Object.ReferenceEquals(Me.CityField, value) <> true) Then
                    Me.CityField = value
                    Me.RaisePropertyChanged("City")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property CountryRegion() As String
            Get
                Return Me.CountryRegionField
            End Get
            Set
                If (Object.ReferenceEquals(Me.CountryRegionField, value) <> true) Then
                    Me.CountryRegionField = value
                    Me.RaisePropertyChanged("CountryRegion")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property CustomerAddresses() As System.Collections.ObjectModel.ObservableCollection(Of CustomerService.Proxies.CustomerAddress)
            Get
                Return Me.CustomerAddressesField
            End Get
            Set
                If (Object.ReferenceEquals(Me.CustomerAddressesField, value) <> true) Then
                    Me.CustomerAddressesField = value
                    Me.RaisePropertyChanged("CustomerAddresses")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property ModifiedDate() As Date
            Get
                Return Me.ModifiedDateField
            End Get
            Set
                If (Me.ModifiedDateField.Equals(value) <> true) Then
                    Me.ModifiedDateField = value
                    Me.RaisePropertyChanged("ModifiedDate")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property PostalCode() As String
            Get
                Return Me.PostalCodeField
            End Get
            Set
                If (Object.ReferenceEquals(Me.PostalCodeField, value) <> true) Then
                    Me.PostalCodeField = value
                    Me.RaisePropertyChanged("PostalCode")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property SalesOrderHeaders() As System.Collections.ObjectModel.ObservableCollection(Of CustomerService.Proxies.SalesOrderHeader)
            Get
                Return Me.SalesOrderHeadersField
            End Get
            Set
                If (Object.ReferenceEquals(Me.SalesOrderHeadersField, value) <> true) Then
                    Me.SalesOrderHeadersField = value
                    Me.RaisePropertyChanged("SalesOrderHeaders")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property SalesOrderHeaders1() As System.Collections.ObjectModel.ObservableCollection(Of CustomerService.Proxies.SalesOrderHeader)
            Get
                Return Me.SalesOrderHeaders1Field
            End Get
            Set
                If (Object.ReferenceEquals(Me.SalesOrderHeaders1Field, value) <> true) Then
                    Me.SalesOrderHeaders1Field = value
                    Me.RaisePropertyChanged("SalesOrderHeaders1")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property StateProvince() As String
            Get
                Return Me.StateProvinceField
            End Get
            Set
                If (Object.ReferenceEquals(Me.StateProvinceField, value) <> true) Then
                    Me.StateProvinceField = value
                    Me.RaisePropertyChanged("StateProvince")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property rowguid() As System.Guid
            Get
                Return Me.rowguidField
            End Get
            Set
                If (Me.rowguidField.Equals(value) <> true) Then
                    Me.rowguidField = value
                    Me.RaisePropertyChanged("rowguid")
                End If
            End Set
        End Property
        
        Public Event PropertyChanged As System.ComponentModel.PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
        
        Protected Sub RaisePropertyChanged(ByVal propertyName As String)
            Dim propertyChanged As System.ComponentModel.PropertyChangedEventHandler = Me.PropertyChangedEvent
            If (Not (propertyChanged) Is Nothing) Then
                propertyChanged(Me, New System.ComponentModel.PropertyChangedEventArgs(propertyName))
            End If
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0"),  _
     System.Runtime.Serialization.DataContractAttribute(Name:="SalesOrderDetail", [Namespace]:="http://schemas.datacontract.org/2004/07/")>  _
    Partial Public Class SalesOrderDetail
        Inherits Object
        Implements System.ComponentModel.INotifyPropertyChanged
        
        Private ChangeTrackerField As CustomerService.Proxies.ObjectChangeTracker
        
        Private LineTotalField As Decimal
        
        Private ModifiedDateField As Date
        
        Private OrderQtyField As Short
        
        Private ProductField As CustomerService.Proxies.Product
        
        Private ProductIDField As Integer
        
        Private SalesOrderDetailIDField As Integer
        
        Private SalesOrderHeaderField As CustomerService.Proxies.SalesOrderHeader
        
        Private SalesOrderIDField As Integer
        
        Private UnitPriceField As Decimal
        
        Private UnitPriceDiscountField As Decimal
        
        Private rowguidField As System.Guid
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property ChangeTracker() As CustomerService.Proxies.ObjectChangeTracker
            Get
                Return Me.ChangeTrackerField
            End Get
            Set
                If (Object.ReferenceEquals(Me.ChangeTrackerField, value) <> true) Then
                    Me.ChangeTrackerField = value
                    Me.RaisePropertyChanged("ChangeTracker")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property LineTotal() As Decimal
            Get
                Return Me.LineTotalField
            End Get
            Set
                If (Me.LineTotalField.Equals(value) <> true) Then
                    Me.LineTotalField = value
                    Me.RaisePropertyChanged("LineTotal")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property ModifiedDate() As Date
            Get
                Return Me.ModifiedDateField
            End Get
            Set
                If (Me.ModifiedDateField.Equals(value) <> true) Then
                    Me.ModifiedDateField = value
                    Me.RaisePropertyChanged("ModifiedDate")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property OrderQty() As Short
            Get
                Return Me.OrderQtyField
            End Get
            Set
                If (Me.OrderQtyField.Equals(value) <> true) Then
                    Me.OrderQtyField = value
                    Me.RaisePropertyChanged("OrderQty")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property Product() As CustomerService.Proxies.Product
            Get
                Return Me.ProductField
            End Get
            Set
                If (Object.ReferenceEquals(Me.ProductField, value) <> true) Then
                    Me.ProductField = value
                    Me.RaisePropertyChanged("Product")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property ProductID() As Integer
            Get
                Return Me.ProductIDField
            End Get
            Set
                If (Me.ProductIDField.Equals(value) <> true) Then
                    Me.ProductIDField = value
                    Me.RaisePropertyChanged("ProductID")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property SalesOrderDetailID() As Integer
            Get
                Return Me.SalesOrderDetailIDField
            End Get
            Set
                If (Me.SalesOrderDetailIDField.Equals(value) <> true) Then
                    Me.SalesOrderDetailIDField = value
                    Me.RaisePropertyChanged("SalesOrderDetailID")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property SalesOrderHeader() As CustomerService.Proxies.SalesOrderHeader
            Get
                Return Me.SalesOrderHeaderField
            End Get
            Set
                If (Object.ReferenceEquals(Me.SalesOrderHeaderField, value) <> true) Then
                    Me.SalesOrderHeaderField = value
                    Me.RaisePropertyChanged("SalesOrderHeader")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property SalesOrderID() As Integer
            Get
                Return Me.SalesOrderIDField
            End Get
            Set
                If (Me.SalesOrderIDField.Equals(value) <> true) Then
                    Me.SalesOrderIDField = value
                    Me.RaisePropertyChanged("SalesOrderID")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property UnitPrice() As Decimal
            Get
                Return Me.UnitPriceField
            End Get
            Set
                If (Me.UnitPriceField.Equals(value) <> true) Then
                    Me.UnitPriceField = value
                    Me.RaisePropertyChanged("UnitPrice")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property UnitPriceDiscount() As Decimal
            Get
                Return Me.UnitPriceDiscountField
            End Get
            Set
                If (Me.UnitPriceDiscountField.Equals(value) <> true) Then
                    Me.UnitPriceDiscountField = value
                    Me.RaisePropertyChanged("UnitPriceDiscount")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property rowguid() As System.Guid
            Get
                Return Me.rowguidField
            End Get
            Set
                If (Me.rowguidField.Equals(value) <> true) Then
                    Me.rowguidField = value
                    Me.RaisePropertyChanged("rowguid")
                End If
            End Set
        End Property
        
        Public Event PropertyChanged As System.ComponentModel.PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
        
        Protected Sub RaisePropertyChanged(ByVal propertyName As String)
            Dim propertyChanged As System.ComponentModel.PropertyChangedEventHandler = Me.PropertyChangedEvent
            If (Not (propertyChanged) Is Nothing) Then
                propertyChanged(Me, New System.ComponentModel.PropertyChangedEventArgs(propertyName))
            End If
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0"),  _
     System.Runtime.Serialization.DataContractAttribute(Name:="Product", [Namespace]:="http://schemas.datacontract.org/2004/07/")>  _
    Partial Public Class Product
        Inherits Object
        Implements System.ComponentModel.INotifyPropertyChanged
        
        Private ChangeTrackerField As CustomerService.Proxies.ObjectChangeTracker
        
        Private ColorField As String
        
        Private DiscontinuedDateField As System.Nullable(Of Date)
        
        Private ListPriceField As Decimal
        
        Private ModifiedDateField As Date
        
        Private NameField As String
        
        Private ProductCategoryField As CustomerService.Proxies.ProductCategory
        
        Private ProductCategoryIDField As System.Nullable(Of Integer)
        
        Private ProductIDField As Integer
        
        Private ProductModelField As CustomerService.Proxies.ProductModel
        
        Private ProductModelIDField As System.Nullable(Of Integer)
        
        Private ProductNumberField As String
        
        Private SalesOrderDetailsField As System.Collections.ObjectModel.ObservableCollection(Of CustomerService.Proxies.SalesOrderDetail)
        
        Private SellEndDateField As System.Nullable(Of Date)
        
        Private SellStartDateField As Date
        
        Private SizeField As String
        
        Private StandardCostField As Decimal
        
        Private ThumbNailPhotoField() As Byte
        
        Private ThumbnailPhotoFileNameField As String
        
        Private WeightField As System.Nullable(Of Decimal)
        
        Private rowguidField As System.Guid
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property ChangeTracker() As CustomerService.Proxies.ObjectChangeTracker
            Get
                Return Me.ChangeTrackerField
            End Get
            Set
                If (Object.ReferenceEquals(Me.ChangeTrackerField, value) <> true) Then
                    Me.ChangeTrackerField = value
                    Me.RaisePropertyChanged("ChangeTracker")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property Color() As String
            Get
                Return Me.ColorField
            End Get
            Set
                If (Object.ReferenceEquals(Me.ColorField, value) <> true) Then
                    Me.ColorField = value
                    Me.RaisePropertyChanged("Color")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property DiscontinuedDate() As System.Nullable(Of Date)
            Get
                Return Me.DiscontinuedDateField
            End Get
            Set
                If (Me.DiscontinuedDateField.Equals(value) <> true) Then
                    Me.DiscontinuedDateField = value
                    Me.RaisePropertyChanged("DiscontinuedDate")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property ListPrice() As Decimal
            Get
                Return Me.ListPriceField
            End Get
            Set
                If (Me.ListPriceField.Equals(value) <> true) Then
                    Me.ListPriceField = value
                    Me.RaisePropertyChanged("ListPrice")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property ModifiedDate() As Date
            Get
                Return Me.ModifiedDateField
            End Get
            Set
                If (Me.ModifiedDateField.Equals(value) <> true) Then
                    Me.ModifiedDateField = value
                    Me.RaisePropertyChanged("ModifiedDate")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property Name() As String
            Get
                Return Me.NameField
            End Get
            Set
                If (Object.ReferenceEquals(Me.NameField, value) <> true) Then
                    Me.NameField = value
                    Me.RaisePropertyChanged("Name")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property ProductCategory() As CustomerService.Proxies.ProductCategory
            Get
                Return Me.ProductCategoryField
            End Get
            Set
                If (Object.ReferenceEquals(Me.ProductCategoryField, value) <> true) Then
                    Me.ProductCategoryField = value
                    Me.RaisePropertyChanged("ProductCategory")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property ProductCategoryID() As System.Nullable(Of Integer)
            Get
                Return Me.ProductCategoryIDField
            End Get
            Set
                If (Me.ProductCategoryIDField.Equals(value) <> true) Then
                    Me.ProductCategoryIDField = value
                    Me.RaisePropertyChanged("ProductCategoryID")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property ProductID() As Integer
            Get
                Return Me.ProductIDField
            End Get
            Set
                If (Me.ProductIDField.Equals(value) <> true) Then
                    Me.ProductIDField = value
                    Me.RaisePropertyChanged("ProductID")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property ProductModel() As CustomerService.Proxies.ProductModel
            Get
                Return Me.ProductModelField
            End Get
            Set
                If (Object.ReferenceEquals(Me.ProductModelField, value) <> true) Then
                    Me.ProductModelField = value
                    Me.RaisePropertyChanged("ProductModel")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property ProductModelID() As System.Nullable(Of Integer)
            Get
                Return Me.ProductModelIDField
            End Get
            Set
                If (Me.ProductModelIDField.Equals(value) <> true) Then
                    Me.ProductModelIDField = value
                    Me.RaisePropertyChanged("ProductModelID")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property ProductNumber() As String
            Get
                Return Me.ProductNumberField
            End Get
            Set
                If (Object.ReferenceEquals(Me.ProductNumberField, value) <> true) Then
                    Me.ProductNumberField = value
                    Me.RaisePropertyChanged("ProductNumber")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property SalesOrderDetails() As System.Collections.ObjectModel.ObservableCollection(Of CustomerService.Proxies.SalesOrderDetail)
            Get
                Return Me.SalesOrderDetailsField
            End Get
            Set
                If (Object.ReferenceEquals(Me.SalesOrderDetailsField, value) <> true) Then
                    Me.SalesOrderDetailsField = value
                    Me.RaisePropertyChanged("SalesOrderDetails")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property SellEndDate() As System.Nullable(Of Date)
            Get
                Return Me.SellEndDateField
            End Get
            Set
                If (Me.SellEndDateField.Equals(value) <> true) Then
                    Me.SellEndDateField = value
                    Me.RaisePropertyChanged("SellEndDate")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property SellStartDate() As Date
            Get
                Return Me.SellStartDateField
            End Get
            Set
                If (Me.SellStartDateField.Equals(value) <> true) Then
                    Me.SellStartDateField = value
                    Me.RaisePropertyChanged("SellStartDate")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property Size() As String
            Get
                Return Me.SizeField
            End Get
            Set
                If (Object.ReferenceEquals(Me.SizeField, value) <> true) Then
                    Me.SizeField = value
                    Me.RaisePropertyChanged("Size")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property StandardCost() As Decimal
            Get
                Return Me.StandardCostField
            End Get
            Set
                If (Me.StandardCostField.Equals(value) <> true) Then
                    Me.StandardCostField = value
                    Me.RaisePropertyChanged("StandardCost")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property ThumbNailPhoto() As Byte()
            Get
                Return Me.ThumbNailPhotoField
            End Get
            Set
                If (Object.ReferenceEquals(Me.ThumbNailPhotoField, value) <> true) Then
                    Me.ThumbNailPhotoField = value
                    Me.RaisePropertyChanged("ThumbNailPhoto")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property ThumbnailPhotoFileName() As String
            Get
                Return Me.ThumbnailPhotoFileNameField
            End Get
            Set
                If (Object.ReferenceEquals(Me.ThumbnailPhotoFileNameField, value) <> true) Then
                    Me.ThumbnailPhotoFileNameField = value
                    Me.RaisePropertyChanged("ThumbnailPhotoFileName")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property Weight() As System.Nullable(Of Decimal)
            Get
                Return Me.WeightField
            End Get
            Set
                If (Me.WeightField.Equals(value) <> true) Then
                    Me.WeightField = value
                    Me.RaisePropertyChanged("Weight")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property rowguid() As System.Guid
            Get
                Return Me.rowguidField
            End Get
            Set
                If (Me.rowguidField.Equals(value) <> true) Then
                    Me.rowguidField = value
                    Me.RaisePropertyChanged("rowguid")
                End If
            End Set
        End Property
        
        Public Event PropertyChanged As System.ComponentModel.PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
        
        Protected Sub RaisePropertyChanged(ByVal propertyName As String)
            Dim propertyChanged As System.ComponentModel.PropertyChangedEventHandler = Me.PropertyChangedEvent
            If (Not (propertyChanged) Is Nothing) Then
                propertyChanged(Me, New System.ComponentModel.PropertyChangedEventArgs(propertyName))
            End If
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0"),  _
     System.Runtime.Serialization.DataContractAttribute(Name:="ProductCategory", [Namespace]:="http://schemas.datacontract.org/2004/07/")>  _
    Partial Public Class ProductCategory
        Inherits Object
        Implements System.ComponentModel.INotifyPropertyChanged
        
        Private ChangeTrackerField As CustomerService.Proxies.ObjectChangeTracker
        
        Private ModifiedDateField As Date
        
        Private NameField As String
        
        Private ParentProductCategoryIDField As System.Nullable(Of Integer)
        
        Private ProductCategory1Field As System.Collections.ObjectModel.ObservableCollection(Of CustomerService.Proxies.ProductCategory)
        
        Private ProductCategory2Field As CustomerService.Proxies.ProductCategory
        
        Private ProductCategoryIDField As Integer
        
        Private ProductsField As System.Collections.ObjectModel.ObservableCollection(Of CustomerService.Proxies.Product)
        
        Private rowguidField As System.Guid
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property ChangeTracker() As CustomerService.Proxies.ObjectChangeTracker
            Get
                Return Me.ChangeTrackerField
            End Get
            Set
                If (Object.ReferenceEquals(Me.ChangeTrackerField, value) <> true) Then
                    Me.ChangeTrackerField = value
                    Me.RaisePropertyChanged("ChangeTracker")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property ModifiedDate() As Date
            Get
                Return Me.ModifiedDateField
            End Get
            Set
                If (Me.ModifiedDateField.Equals(value) <> true) Then
                    Me.ModifiedDateField = value
                    Me.RaisePropertyChanged("ModifiedDate")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property Name() As String
            Get
                Return Me.NameField
            End Get
            Set
                If (Object.ReferenceEquals(Me.NameField, value) <> true) Then
                    Me.NameField = value
                    Me.RaisePropertyChanged("Name")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property ParentProductCategoryID() As System.Nullable(Of Integer)
            Get
                Return Me.ParentProductCategoryIDField
            End Get
            Set
                If (Me.ParentProductCategoryIDField.Equals(value) <> true) Then
                    Me.ParentProductCategoryIDField = value
                    Me.RaisePropertyChanged("ParentProductCategoryID")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property ProductCategory1() As System.Collections.ObjectModel.ObservableCollection(Of CustomerService.Proxies.ProductCategory)
            Get
                Return Me.ProductCategory1Field
            End Get
            Set
                If (Object.ReferenceEquals(Me.ProductCategory1Field, value) <> true) Then
                    Me.ProductCategory1Field = value
                    Me.RaisePropertyChanged("ProductCategory1")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property ProductCategory2() As CustomerService.Proxies.ProductCategory
            Get
                Return Me.ProductCategory2Field
            End Get
            Set
                If (Object.ReferenceEquals(Me.ProductCategory2Field, value) <> true) Then
                    Me.ProductCategory2Field = value
                    Me.RaisePropertyChanged("ProductCategory2")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property ProductCategoryID() As Integer
            Get
                Return Me.ProductCategoryIDField
            End Get
            Set
                If (Me.ProductCategoryIDField.Equals(value) <> true) Then
                    Me.ProductCategoryIDField = value
                    Me.RaisePropertyChanged("ProductCategoryID")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property Products() As System.Collections.ObjectModel.ObservableCollection(Of CustomerService.Proxies.Product)
            Get
                Return Me.ProductsField
            End Get
            Set
                If (Object.ReferenceEquals(Me.ProductsField, value) <> true) Then
                    Me.ProductsField = value
                    Me.RaisePropertyChanged("Products")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property rowguid() As System.Guid
            Get
                Return Me.rowguidField
            End Get
            Set
                If (Me.rowguidField.Equals(value) <> true) Then
                    Me.rowguidField = value
                    Me.RaisePropertyChanged("rowguid")
                End If
            End Set
        End Property
        
        Public Event PropertyChanged As System.ComponentModel.PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
        
        Protected Sub RaisePropertyChanged(ByVal propertyName As String)
            Dim propertyChanged As System.ComponentModel.PropertyChangedEventHandler = Me.PropertyChangedEvent
            If (Not (propertyChanged) Is Nothing) Then
                propertyChanged(Me, New System.ComponentModel.PropertyChangedEventArgs(propertyName))
            End If
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0"),  _
     System.Runtime.Serialization.DataContractAttribute(Name:="ProductModel", [Namespace]:="http://schemas.datacontract.org/2004/07/")>  _
    Partial Public Class ProductModel
        Inherits Object
        Implements System.ComponentModel.INotifyPropertyChanged
        
        Private CatalogDescriptionField As String
        
        Private ChangeTrackerField As CustomerService.Proxies.ObjectChangeTracker
        
        Private ModifiedDateField As Date
        
        Private NameField As String
        
        Private ProductModelIDField As Integer
        
        Private ProductModelProductDescriptionsField As System.Collections.ObjectModel.ObservableCollection(Of CustomerService.Proxies.ProductModelProductDescription)
        
        Private ProductsField As System.Collections.ObjectModel.ObservableCollection(Of CustomerService.Proxies.Product)
        
        Private rowguidField As System.Guid
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property CatalogDescription() As String
            Get
                Return Me.CatalogDescriptionField
            End Get
            Set
                If (Object.ReferenceEquals(Me.CatalogDescriptionField, value) <> true) Then
                    Me.CatalogDescriptionField = value
                    Me.RaisePropertyChanged("CatalogDescription")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property ChangeTracker() As CustomerService.Proxies.ObjectChangeTracker
            Get
                Return Me.ChangeTrackerField
            End Get
            Set
                If (Object.ReferenceEquals(Me.ChangeTrackerField, value) <> true) Then
                    Me.ChangeTrackerField = value
                    Me.RaisePropertyChanged("ChangeTracker")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property ModifiedDate() As Date
            Get
                Return Me.ModifiedDateField
            End Get
            Set
                If (Me.ModifiedDateField.Equals(value) <> true) Then
                    Me.ModifiedDateField = value
                    Me.RaisePropertyChanged("ModifiedDate")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property Name() As String
            Get
                Return Me.NameField
            End Get
            Set
                If (Object.ReferenceEquals(Me.NameField, value) <> true) Then
                    Me.NameField = value
                    Me.RaisePropertyChanged("Name")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property ProductModelID() As Integer
            Get
                Return Me.ProductModelIDField
            End Get
            Set
                If (Me.ProductModelIDField.Equals(value) <> true) Then
                    Me.ProductModelIDField = value
                    Me.RaisePropertyChanged("ProductModelID")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property ProductModelProductDescriptions() As System.Collections.ObjectModel.ObservableCollection(Of CustomerService.Proxies.ProductModelProductDescription)
            Get
                Return Me.ProductModelProductDescriptionsField
            End Get
            Set
                If (Object.ReferenceEquals(Me.ProductModelProductDescriptionsField, value) <> true) Then
                    Me.ProductModelProductDescriptionsField = value
                    Me.RaisePropertyChanged("ProductModelProductDescriptions")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property Products() As System.Collections.ObjectModel.ObservableCollection(Of CustomerService.Proxies.Product)
            Get
                Return Me.ProductsField
            End Get
            Set
                If (Object.ReferenceEquals(Me.ProductsField, value) <> true) Then
                    Me.ProductsField = value
                    Me.RaisePropertyChanged("Products")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property rowguid() As System.Guid
            Get
                Return Me.rowguidField
            End Get
            Set
                If (Me.rowguidField.Equals(value) <> true) Then
                    Me.rowguidField = value
                    Me.RaisePropertyChanged("rowguid")
                End If
            End Set
        End Property
        
        Public Event PropertyChanged As System.ComponentModel.PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
        
        Protected Sub RaisePropertyChanged(ByVal propertyName As String)
            Dim propertyChanged As System.ComponentModel.PropertyChangedEventHandler = Me.PropertyChangedEvent
            If (Not (propertyChanged) Is Nothing) Then
                propertyChanged(Me, New System.ComponentModel.PropertyChangedEventArgs(propertyName))
            End If
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0"),  _
     System.Runtime.Serialization.DataContractAttribute(Name:="ProductModelProductDescription", [Namespace]:="http://schemas.datacontract.org/2004/07/")>  _
    Partial Public Class ProductModelProductDescription
        Inherits Object
        Implements System.ComponentModel.INotifyPropertyChanged
        
        Private ChangeTrackerField As CustomerService.Proxies.ObjectChangeTracker
        
        Private CultureField As String
        
        Private ModifiedDateField As Date
        
        Private ProductDescriptionField As CustomerService.Proxies.ProductDescription
        
        Private ProductDescriptionIDField As Integer
        
        Private ProductModelField As CustomerService.Proxies.ProductModel
        
        Private ProductModelIDField As Integer
        
        Private rowguidField As System.Guid
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property ChangeTracker() As CustomerService.Proxies.ObjectChangeTracker
            Get
                Return Me.ChangeTrackerField
            End Get
            Set
                If (Object.ReferenceEquals(Me.ChangeTrackerField, value) <> true) Then
                    Me.ChangeTrackerField = value
                    Me.RaisePropertyChanged("ChangeTracker")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property Culture() As String
            Get
                Return Me.CultureField
            End Get
            Set
                If (Object.ReferenceEquals(Me.CultureField, value) <> true) Then
                    Me.CultureField = value
                    Me.RaisePropertyChanged("Culture")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property ModifiedDate() As Date
            Get
                Return Me.ModifiedDateField
            End Get
            Set
                If (Me.ModifiedDateField.Equals(value) <> true) Then
                    Me.ModifiedDateField = value
                    Me.RaisePropertyChanged("ModifiedDate")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property ProductDescription() As CustomerService.Proxies.ProductDescription
            Get
                Return Me.ProductDescriptionField
            End Get
            Set
                If (Object.ReferenceEquals(Me.ProductDescriptionField, value) <> true) Then
                    Me.ProductDescriptionField = value
                    Me.RaisePropertyChanged("ProductDescription")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property ProductDescriptionID() As Integer
            Get
                Return Me.ProductDescriptionIDField
            End Get
            Set
                If (Me.ProductDescriptionIDField.Equals(value) <> true) Then
                    Me.ProductDescriptionIDField = value
                    Me.RaisePropertyChanged("ProductDescriptionID")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property ProductModel() As CustomerService.Proxies.ProductModel
            Get
                Return Me.ProductModelField
            End Get
            Set
                If (Object.ReferenceEquals(Me.ProductModelField, value) <> true) Then
                    Me.ProductModelField = value
                    Me.RaisePropertyChanged("ProductModel")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property ProductModelID() As Integer
            Get
                Return Me.ProductModelIDField
            End Get
            Set
                If (Me.ProductModelIDField.Equals(value) <> true) Then
                    Me.ProductModelIDField = value
                    Me.RaisePropertyChanged("ProductModelID")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property rowguid() As System.Guid
            Get
                Return Me.rowguidField
            End Get
            Set
                If (Me.rowguidField.Equals(value) <> true) Then
                    Me.rowguidField = value
                    Me.RaisePropertyChanged("rowguid")
                End If
            End Set
        End Property
        
        Public Event PropertyChanged As System.ComponentModel.PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
        
        Protected Sub RaisePropertyChanged(ByVal propertyName As String)
            Dim propertyChanged As System.ComponentModel.PropertyChangedEventHandler = Me.PropertyChangedEvent
            If (Not (propertyChanged) Is Nothing) Then
                propertyChanged(Me, New System.ComponentModel.PropertyChangedEventArgs(propertyName))
            End If
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0"),  _
     System.Runtime.Serialization.DataContractAttribute(Name:="ProductDescription", [Namespace]:="http://schemas.datacontract.org/2004/07/")>  _
    Partial Public Class ProductDescription
        Inherits Object
        Implements System.ComponentModel.INotifyPropertyChanged
        
        Private ChangeTrackerField As CustomerService.Proxies.ObjectChangeTracker
        
        Private DescriptionField As String
        
        Private ModifiedDateField As Date
        
        Private ProductDescriptionIDField As Integer
        
        Private ProductModelProductDescriptionsField As System.Collections.ObjectModel.ObservableCollection(Of CustomerService.Proxies.ProductModelProductDescription)
        
        Private rowguidField As System.Guid
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property ChangeTracker() As CustomerService.Proxies.ObjectChangeTracker
            Get
                Return Me.ChangeTrackerField
            End Get
            Set
                If (Object.ReferenceEquals(Me.ChangeTrackerField, value) <> true) Then
                    Me.ChangeTrackerField = value
                    Me.RaisePropertyChanged("ChangeTracker")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property Description() As String
            Get
                Return Me.DescriptionField
            End Get
            Set
                If (Object.ReferenceEquals(Me.DescriptionField, value) <> true) Then
                    Me.DescriptionField = value
                    Me.RaisePropertyChanged("Description")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property ModifiedDate() As Date
            Get
                Return Me.ModifiedDateField
            End Get
            Set
                If (Me.ModifiedDateField.Equals(value) <> true) Then
                    Me.ModifiedDateField = value
                    Me.RaisePropertyChanged("ModifiedDate")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property ProductDescriptionID() As Integer
            Get
                Return Me.ProductDescriptionIDField
            End Get
            Set
                If (Me.ProductDescriptionIDField.Equals(value) <> true) Then
                    Me.ProductDescriptionIDField = value
                    Me.RaisePropertyChanged("ProductDescriptionID")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property ProductModelProductDescriptions() As System.Collections.ObjectModel.ObservableCollection(Of CustomerService.Proxies.ProductModelProductDescription)
            Get
                Return Me.ProductModelProductDescriptionsField
            End Get
            Set
                If (Object.ReferenceEquals(Me.ProductModelProductDescriptionsField, value) <> true) Then
                    Me.ProductModelProductDescriptionsField = value
                    Me.RaisePropertyChanged("ProductModelProductDescriptions")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property rowguid() As System.Guid
            Get
                Return Me.rowguidField
            End Get
            Set
                If (Me.rowguidField.Equals(value) <> true) Then
                    Me.rowguidField = value
                    Me.RaisePropertyChanged("rowguid")
                End If
            End Set
        End Property
        
        Public Event PropertyChanged As System.ComponentModel.PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
        
        Protected Sub RaisePropertyChanged(ByVal propertyName As String)
            Dim propertyChanged As System.ComponentModel.PropertyChangedEventHandler = Me.PropertyChangedEvent
            If (Not (propertyChanged) Is Nothing) Then
                propertyChanged(Me, New System.ComponentModel.PropertyChangedEventArgs(propertyName))
            End If
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0"),  _
     System.Runtime.Serialization.DataContractAttribute(Name:="OperationStatus", [Namespace]:="http://schemas.datacontract.org/2004/07/CustomersService.Model.Entities"),  _
     System.Runtime.Serialization.KnownTypeAttribute(GetType(System.Collections.ObjectModel.ObservableCollection(Of CustomerService.Proxies.Customer))),  _
     System.Runtime.Serialization.KnownTypeAttribute(GetType(CustomerService.Proxies.Customer)),  _
     System.Runtime.Serialization.KnownTypeAttribute(GetType(CustomerService.Proxies.ObjectChangeTracker)),  _
     System.Runtime.Serialization.KnownTypeAttribute(GetType(CustomerService.Proxies.ExtendedPropertiesDictionary)),  _
     System.Runtime.Serialization.KnownTypeAttribute(GetType(CustomerService.Proxies.ObjectsAddedToCollectionProperties)),  _
     System.Runtime.Serialization.KnownTypeAttribute(GetType(CustomerService.Proxies.ObjectList)),  _
     System.Runtime.Serialization.KnownTypeAttribute(GetType(CustomerService.Proxies.ObjectsRemovedFromCollectionProperties)),  _
     System.Runtime.Serialization.KnownTypeAttribute(GetType(CustomerService.Proxies.OriginalValuesDictionary)),  _
     System.Runtime.Serialization.KnownTypeAttribute(GetType(CustomerService.Proxies.ObjectState)),  _
     System.Runtime.Serialization.KnownTypeAttribute(GetType(System.Collections.ObjectModel.ObservableCollection(Of CustomerService.Proxies.CustomerAddress))),  _
     System.Runtime.Serialization.KnownTypeAttribute(GetType(CustomerService.Proxies.CustomerAddress)),  _
     System.Runtime.Serialization.KnownTypeAttribute(GetType(CustomerService.Proxies.Address)),  _
     System.Runtime.Serialization.KnownTypeAttribute(GetType(System.Collections.ObjectModel.ObservableCollection(Of CustomerService.Proxies.SalesOrderHeader))),  _
     System.Runtime.Serialization.KnownTypeAttribute(GetType(CustomerService.Proxies.SalesOrderHeader)),  _
     System.Runtime.Serialization.KnownTypeAttribute(GetType(System.Collections.ObjectModel.ObservableCollection(Of CustomerService.Proxies.SalesOrderDetail))),  _
     System.Runtime.Serialization.KnownTypeAttribute(GetType(CustomerService.Proxies.SalesOrderDetail)),  _
     System.Runtime.Serialization.KnownTypeAttribute(GetType(CustomerService.Proxies.Product)),  _
     System.Runtime.Serialization.KnownTypeAttribute(GetType(CustomerService.Proxies.ProductCategory)),  _
     System.Runtime.Serialization.KnownTypeAttribute(GetType(System.Collections.ObjectModel.ObservableCollection(Of CustomerService.Proxies.ProductCategory))),  _
     System.Runtime.Serialization.KnownTypeAttribute(GetType(System.Collections.ObjectModel.ObservableCollection(Of CustomerService.Proxies.Product))),  _
     System.Runtime.Serialization.KnownTypeAttribute(GetType(CustomerService.Proxies.ProductModel)),  _
     System.Runtime.Serialization.KnownTypeAttribute(GetType(System.Collections.ObjectModel.ObservableCollection(Of CustomerService.Proxies.ProductModelProductDescription))),  _
     System.Runtime.Serialization.KnownTypeAttribute(GetType(CustomerService.Proxies.ProductModelProductDescription)),  _
     System.Runtime.Serialization.KnownTypeAttribute(GetType(CustomerService.Proxies.ProductDescription))>  _
    Partial Public Class OperationStatus
        Inherits Object
        Implements System.ComponentModel.INotifyPropertyChanged
        
        Private ExceptionInnerMessageField As String
        
        Private ExceptionInnerStackTraceField As String
        
        Private ExceptionMessageField As String
        
        Private ExceptionStackTraceField As String
        
        Private MessageField As String
        
        Private OperationIDField As Object
        
        Private RecordsAffectedField As Integer
        
        Private StatusField As Boolean
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property ExceptionInnerMessage() As String
            Get
                Return Me.ExceptionInnerMessageField
            End Get
            Set
                If (Object.ReferenceEquals(Me.ExceptionInnerMessageField, value) <> true) Then
                    Me.ExceptionInnerMessageField = value
                    Me.RaisePropertyChanged("ExceptionInnerMessage")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property ExceptionInnerStackTrace() As String
            Get
                Return Me.ExceptionInnerStackTraceField
            End Get
            Set
                If (Object.ReferenceEquals(Me.ExceptionInnerStackTraceField, value) <> true) Then
                    Me.ExceptionInnerStackTraceField = value
                    Me.RaisePropertyChanged("ExceptionInnerStackTrace")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property ExceptionMessage() As String
            Get
                Return Me.ExceptionMessageField
            End Get
            Set
                If (Object.ReferenceEquals(Me.ExceptionMessageField, value) <> true) Then
                    Me.ExceptionMessageField = value
                    Me.RaisePropertyChanged("ExceptionMessage")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property ExceptionStackTrace() As String
            Get
                Return Me.ExceptionStackTraceField
            End Get
            Set
                If (Object.ReferenceEquals(Me.ExceptionStackTraceField, value) <> true) Then
                    Me.ExceptionStackTraceField = value
                    Me.RaisePropertyChanged("ExceptionStackTrace")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property Message() As String
            Get
                Return Me.MessageField
            End Get
            Set
                If (Object.ReferenceEquals(Me.MessageField, value) <> true) Then
                    Me.MessageField = value
                    Me.RaisePropertyChanged("Message")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property OperationID() As Object
            Get
                Return Me.OperationIDField
            End Get
            Set
                If (Object.ReferenceEquals(Me.OperationIDField, value) <> true) Then
                    Me.OperationIDField = value
                    Me.RaisePropertyChanged("OperationID")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property RecordsAffected() As Integer
            Get
                Return Me.RecordsAffectedField
            End Get
            Set
                If (Me.RecordsAffectedField.Equals(value) <> true) Then
                    Me.RecordsAffectedField = value
                    Me.RaisePropertyChanged("RecordsAffected")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property Status() As Boolean
            Get
                Return Me.StatusField
            End Get
            Set
                If (Me.StatusField.Equals(value) <> true) Then
                    Me.StatusField = value
                    Me.RaisePropertyChanged("Status")
                End If
            End Set
        End Property
        
        Public Event PropertyChanged As System.ComponentModel.PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
        
        Protected Sub RaisePropertyChanged(ByVal propertyName As String)
            Dim propertyChanged As System.ComponentModel.PropertyChangedEventHandler = Me.PropertyChangedEvent
            If (Not (propertyChanged) Is Nothing) Then
                propertyChanged(Me, New System.ComponentModel.PropertyChangedEventArgs(propertyName))
            End If
        End Sub
    End Class
    
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0"),  _
     System.ServiceModel.ServiceContractAttribute(ConfigurationName:="CustomerService.Proxies.ICustomerService")>  _
    Public Interface ICustomerService
        
        <System.ServiceModel.OperationContractAttribute(AsyncPattern:=true, Action:="http://tempuri.org/ICustomerService/GetCustomers", ReplyAction:="http://tempuri.org/ICustomerService/GetCustomersResponse")>  _
        Function BeginGetCustomers(ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
        
        Function EndGetCustomers(ByVal result As System.IAsyncResult) As System.Collections.ObjectModel.ObservableCollection(Of CustomerService.Proxies.Customer)
        
        <System.ServiceModel.OperationContractAttribute(AsyncPattern:=true, Action:="http://tempuri.org/ICustomerService/SaveCustomer", ReplyAction:="http://tempuri.org/ICustomerService/SaveCustomerResponse")>  _
        Function BeginSaveCustomer(ByVal customer As CustomerService.Proxies.Customer, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
        
        Function EndSaveCustomer(ByVal result As System.IAsyncResult) As CustomerService.Proxies.OperationStatus
        
        <System.ServiceModel.OperationContractAttribute(AsyncPattern:=true, Action:="http://tempuri.org/ICustomerService/DeleteCustomer", ReplyAction:="http://tempuri.org/ICustomerService/DeleteCustomerResponse")>  _
        Function BeginDeleteCustomer(ByVal custID As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
        
        Function EndDeleteCustomer(ByVal result As System.IAsyncResult) As CustomerService.Proxies.OperationStatus
        
        <System.ServiceModel.OperationContractAttribute(AsyncPattern:=true, Action:="http://tempuri.org/ICustomerService/UpdateCustomer", ReplyAction:="http://tempuri.org/ICustomerService/UpdateCustomerResponse")>  _
        Function BeginUpdateCustomer(ByVal customerID As String, ByVal firstName As String, ByVal lastName As String, ByVal companyName As String, ByVal emailAddress As String, ByVal phone As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
        
        Function EndUpdateCustomer(ByVal result As System.IAsyncResult) As CustomerService.Proxies.OperationStatus
        
        <System.ServiceModel.OperationContractAttribute(AsyncPattern:=true, Action:="http://tempuri.org/ICustomerService/GetCustomer", ReplyAction:="http://tempuri.org/ICustomerService/GetCustomerResponse")>  _
        Function BeginGetCustomer(ByVal custID As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
        
        Function EndGetCustomer(ByVal result As System.IAsyncResult) As CustomerService.Proxies.Customer
    End Interface
    
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")>  _
    Public Interface ICustomerServiceChannel
        Inherits CustomerService.Proxies.ICustomerService, System.ServiceModel.IClientChannel
    End Interface
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")>  _
    Partial Public Class GetCustomersCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Public Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        Public ReadOnly Property Result() As System.Collections.ObjectModel.ObservableCollection(Of CustomerService.Proxies.Customer)
            Get
                MyBase.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Collections.ObjectModel.ObservableCollection(Of CustomerService.Proxies.Customer))
            End Get
        End Property
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")>  _
    Partial Public Class SaveCustomerCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Public Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        Public ReadOnly Property Result() As CustomerService.Proxies.OperationStatus
            Get
                MyBase.RaiseExceptionIfNecessary
                Return CType(Me.results(0),CustomerService.Proxies.OperationStatus)
            End Get
        End Property
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")>  _
    Partial Public Class DeleteCustomerCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Public Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        Public ReadOnly Property Result() As CustomerService.Proxies.OperationStatus
            Get
                MyBase.RaiseExceptionIfNecessary
                Return CType(Me.results(0),CustomerService.Proxies.OperationStatus)
            End Get
        End Property
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")>  _
    Partial Public Class UpdateCustomerCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Public Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        Public ReadOnly Property Result() As CustomerService.Proxies.OperationStatus
            Get
                MyBase.RaiseExceptionIfNecessary
                Return CType(Me.results(0),CustomerService.Proxies.OperationStatus)
            End Get
        End Property
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")>  _
    Partial Public Class GetCustomerCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Public Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        Public ReadOnly Property Result() As CustomerService.Proxies.Customer
            Get
                MyBase.RaiseExceptionIfNecessary
                Return CType(Me.results(0),CustomerService.Proxies.Customer)
            End Get
        End Property
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")>  _
    Partial Public Class CustomerServiceClient
        Inherits System.ServiceModel.ClientBase(Of CustomerService.Proxies.ICustomerService)
        Implements CustomerService.Proxies.ICustomerService
        
        Private onBeginGetCustomersDelegate As BeginOperationDelegate
        
        Private onEndGetCustomersDelegate As EndOperationDelegate
        
        Private onGetCustomersCompletedDelegate As System.Threading.SendOrPostCallback
        
        Private onBeginSaveCustomerDelegate As BeginOperationDelegate
        
        Private onEndSaveCustomerDelegate As EndOperationDelegate
        
        Private onSaveCustomerCompletedDelegate As System.Threading.SendOrPostCallback
        
        Private onBeginDeleteCustomerDelegate As BeginOperationDelegate
        
        Private onEndDeleteCustomerDelegate As EndOperationDelegate
        
        Private onDeleteCustomerCompletedDelegate As System.Threading.SendOrPostCallback
        
        Private onBeginUpdateCustomerDelegate As BeginOperationDelegate
        
        Private onEndUpdateCustomerDelegate As EndOperationDelegate
        
        Private onUpdateCustomerCompletedDelegate As System.Threading.SendOrPostCallback
        
        Private onBeginGetCustomerDelegate As BeginOperationDelegate
        
        Private onEndGetCustomerDelegate As EndOperationDelegate
        
        Private onGetCustomerCompletedDelegate As System.Threading.SendOrPostCallback
        
        Private onBeginOpenDelegate As BeginOperationDelegate
        
        Private onEndOpenDelegate As EndOperationDelegate
        
        Private onOpenCompletedDelegate As System.Threading.SendOrPostCallback
        
        Private onBeginCloseDelegate As BeginOperationDelegate
        
        Private onEndCloseDelegate As EndOperationDelegate
        
        Private onCloseCompletedDelegate As System.Threading.SendOrPostCallback
        
        Public Sub New()
            MyBase.New
        End Sub
        
        Public Sub New(ByVal endpointConfigurationName As String)
            MyBase.New(endpointConfigurationName)
        End Sub
        
        Public Sub New(ByVal endpointConfigurationName As String, ByVal remoteAddress As String)
            MyBase.New(endpointConfigurationName, remoteAddress)
        End Sub
        
        Public Sub New(ByVal endpointConfigurationName As String, ByVal remoteAddress As System.ServiceModel.EndpointAddress)
            MyBase.New(endpointConfigurationName, remoteAddress)
        End Sub
        
        Public Sub New(ByVal binding As System.ServiceModel.Channels.Binding, ByVal remoteAddress As System.ServiceModel.EndpointAddress)
            MyBase.New(binding, remoteAddress)
        End Sub
        
        Public Property CookieContainer() As System.Net.CookieContainer
            Get
                Dim httpCookieContainerManager As System.ServiceModel.Channels.IHttpCookieContainerManager = Me.InnerChannel.GetProperty(Of System.ServiceModel.Channels.IHttpCookieContainerManager)
                If (Not (httpCookieContainerManager) Is Nothing) Then
                    Return httpCookieContainerManager.CookieContainer
                Else
                    Return Nothing
                End If
            End Get
            Set
                Dim httpCookieContainerManager As System.ServiceModel.Channels.IHttpCookieContainerManager = Me.InnerChannel.GetProperty(Of System.ServiceModel.Channels.IHttpCookieContainerManager)
                If (Not (httpCookieContainerManager) Is Nothing) Then
                    httpCookieContainerManager.CookieContainer = value
                Else
                    Throw New System.InvalidOperationException("Unable to set the CookieContainer. Please make sure the binding contains an HttpC"& _ 
                            "ookieContainerBindingElement.")
                End If
            End Set
        End Property
        
        Public Event GetCustomersCompleted As System.EventHandler(Of GetCustomersCompletedEventArgs)
        
        Public Event SaveCustomerCompleted As System.EventHandler(Of SaveCustomerCompletedEventArgs)
        
        Public Event DeleteCustomerCompleted As System.EventHandler(Of DeleteCustomerCompletedEventArgs)
        
        Public Event UpdateCustomerCompleted As System.EventHandler(Of UpdateCustomerCompletedEventArgs)
        
        Public Event GetCustomerCompleted As System.EventHandler(Of GetCustomerCompletedEventArgs)
        
        Public Event OpenCompleted As System.EventHandler(Of System.ComponentModel.AsyncCompletedEventArgs)
        
        Public Event CloseCompleted As System.EventHandler(Of System.ComponentModel.AsyncCompletedEventArgs)
        
        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)>  _
        Function CustomerService_Proxies_ICustomerService_BeginGetCustomers(ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult Implements CustomerService.Proxies.ICustomerService.BeginGetCustomers
            Return MyBase.Channel.BeginGetCustomers(callback, asyncState)
        End Function
        
        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)>  _
        Function CustomerService_Proxies_ICustomerService_EndGetCustomers(ByVal result As System.IAsyncResult) As System.Collections.ObjectModel.ObservableCollection(Of CustomerService.Proxies.Customer) Implements CustomerService.Proxies.ICustomerService.EndGetCustomers
            Return MyBase.Channel.EndGetCustomers(result)
        End Function
        
        Private Function OnBeginGetCustomers(ByVal inValues() As Object, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return CType(Me,CustomerService.Proxies.ICustomerService).BeginGetCustomers(callback, asyncState)
        End Function
        
        Private Function OnEndGetCustomers(ByVal result As System.IAsyncResult) As Object()
            Dim retVal As System.Collections.ObjectModel.ObservableCollection(Of CustomerService.Proxies.Customer) = CType(Me,CustomerService.Proxies.ICustomerService).EndGetCustomers(result)
            Return New Object() {retVal}
        End Function
        
        Private Sub OnGetCustomersCompleted(ByVal state As Object)
            If (Not (Me.GetCustomersCompletedEvent) Is Nothing) Then
                Dim e As InvokeAsyncCompletedEventArgs = CType(state,InvokeAsyncCompletedEventArgs)
                RaiseEvent GetCustomersCompleted(Me, New GetCustomersCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState))
            End If
        End Sub
        
        Public Overloads Sub GetCustomersAsync()
            Me.GetCustomersAsync(Nothing)
        End Sub
        
        Public Overloads Sub GetCustomersAsync(ByVal userState As Object)
            If (Me.onBeginGetCustomersDelegate Is Nothing) Then
                Me.onBeginGetCustomersDelegate = AddressOf Me.OnBeginGetCustomers
            End If
            If (Me.onEndGetCustomersDelegate Is Nothing) Then
                Me.onEndGetCustomersDelegate = AddressOf Me.OnEndGetCustomers
            End If
            If (Me.onGetCustomersCompletedDelegate Is Nothing) Then
                Me.onGetCustomersCompletedDelegate = AddressOf Me.OnGetCustomersCompleted
            End If
            MyBase.InvokeAsync(Me.onBeginGetCustomersDelegate, Nothing, Me.onEndGetCustomersDelegate, Me.onGetCustomersCompletedDelegate, userState)
        End Sub
        
        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)>  _
        Function CustomerService_Proxies_ICustomerService_BeginSaveCustomer(ByVal customer As CustomerService.Proxies.Customer, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult Implements CustomerService.Proxies.ICustomerService.BeginSaveCustomer
            Return MyBase.Channel.BeginSaveCustomer(customer, callback, asyncState)
        End Function
        
        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)>  _
        Function CustomerService_Proxies_ICustomerService_EndSaveCustomer(ByVal result As System.IAsyncResult) As CustomerService.Proxies.OperationStatus Implements CustomerService.Proxies.ICustomerService.EndSaveCustomer
            Return MyBase.Channel.EndSaveCustomer(result)
        End Function
        
        Private Function OnBeginSaveCustomer(ByVal inValues() As Object, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Dim customer As CustomerService.Proxies.Customer = CType(inValues(0),CustomerService.Proxies.Customer)
            Return CType(Me,CustomerService.Proxies.ICustomerService).BeginSaveCustomer(customer, callback, asyncState)
        End Function
        
        Private Function OnEndSaveCustomer(ByVal result As System.IAsyncResult) As Object()
            Dim retVal As CustomerService.Proxies.OperationStatus = CType(Me,CustomerService.Proxies.ICustomerService).EndSaveCustomer(result)
            Return New Object() {retVal}
        End Function
        
        Private Sub OnSaveCustomerCompleted(ByVal state As Object)
            If (Not (Me.SaveCustomerCompletedEvent) Is Nothing) Then
                Dim e As InvokeAsyncCompletedEventArgs = CType(state,InvokeAsyncCompletedEventArgs)
                RaiseEvent SaveCustomerCompleted(Me, New SaveCustomerCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState))
            End If
        End Sub
        
        Public Overloads Sub SaveCustomerAsync(ByVal customer As CustomerService.Proxies.Customer)
            Me.SaveCustomerAsync(customer, Nothing)
        End Sub
        
        Public Overloads Sub SaveCustomerAsync(ByVal customer As CustomerService.Proxies.Customer, ByVal userState As Object)
            If (Me.onBeginSaveCustomerDelegate Is Nothing) Then
                Me.onBeginSaveCustomerDelegate = AddressOf Me.OnBeginSaveCustomer
            End If
            If (Me.onEndSaveCustomerDelegate Is Nothing) Then
                Me.onEndSaveCustomerDelegate = AddressOf Me.OnEndSaveCustomer
            End If
            If (Me.onSaveCustomerCompletedDelegate Is Nothing) Then
                Me.onSaveCustomerCompletedDelegate = AddressOf Me.OnSaveCustomerCompleted
            End If
            MyBase.InvokeAsync(Me.onBeginSaveCustomerDelegate, New Object() {customer}, Me.onEndSaveCustomerDelegate, Me.onSaveCustomerCompletedDelegate, userState)
        End Sub
        
        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)>  _
        Function CustomerService_Proxies_ICustomerService_BeginDeleteCustomer(ByVal custID As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult Implements CustomerService.Proxies.ICustomerService.BeginDeleteCustomer
            Return MyBase.Channel.BeginDeleteCustomer(custID, callback, asyncState)
        End Function
        
        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)>  _
        Function CustomerService_Proxies_ICustomerService_EndDeleteCustomer(ByVal result As System.IAsyncResult) As CustomerService.Proxies.OperationStatus Implements CustomerService.Proxies.ICustomerService.EndDeleteCustomer
            Return MyBase.Channel.EndDeleteCustomer(result)
        End Function
        
        Private Function OnBeginDeleteCustomer(ByVal inValues() As Object, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Dim custID As String = CType(inValues(0),String)
            Return CType(Me,CustomerService.Proxies.ICustomerService).BeginDeleteCustomer(custID, callback, asyncState)
        End Function
        
        Private Function OnEndDeleteCustomer(ByVal result As System.IAsyncResult) As Object()
            Dim retVal As CustomerService.Proxies.OperationStatus = CType(Me,CustomerService.Proxies.ICustomerService).EndDeleteCustomer(result)
            Return New Object() {retVal}
        End Function
        
        Private Sub OnDeleteCustomerCompleted(ByVal state As Object)
            If (Not (Me.DeleteCustomerCompletedEvent) Is Nothing) Then
                Dim e As InvokeAsyncCompletedEventArgs = CType(state,InvokeAsyncCompletedEventArgs)
                RaiseEvent DeleteCustomerCompleted(Me, New DeleteCustomerCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState))
            End If
        End Sub
        
        Public Overloads Sub DeleteCustomerAsync(ByVal custID As String)
            Me.DeleteCustomerAsync(custID, Nothing)
        End Sub
        
        Public Overloads Sub DeleteCustomerAsync(ByVal custID As String, ByVal userState As Object)
            If (Me.onBeginDeleteCustomerDelegate Is Nothing) Then
                Me.onBeginDeleteCustomerDelegate = AddressOf Me.OnBeginDeleteCustomer
            End If
            If (Me.onEndDeleteCustomerDelegate Is Nothing) Then
                Me.onEndDeleteCustomerDelegate = AddressOf Me.OnEndDeleteCustomer
            End If
            If (Me.onDeleteCustomerCompletedDelegate Is Nothing) Then
                Me.onDeleteCustomerCompletedDelegate = AddressOf Me.OnDeleteCustomerCompleted
            End If
            MyBase.InvokeAsync(Me.onBeginDeleteCustomerDelegate, New Object() {custID}, Me.onEndDeleteCustomerDelegate, Me.onDeleteCustomerCompletedDelegate, userState)
        End Sub
        
        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)>  _
        Function CustomerService_Proxies_ICustomerService_BeginUpdateCustomer(ByVal customerID As String, ByVal firstName As String, ByVal lastName As String, ByVal companyName As String, ByVal emailAddress As String, ByVal phone As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult Implements CustomerService.Proxies.ICustomerService.BeginUpdateCustomer
            Return MyBase.Channel.BeginUpdateCustomer(customerID, firstName, lastName, companyName, emailAddress, phone, callback, asyncState)
        End Function
        
        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)>  _
        Function CustomerService_Proxies_ICustomerService_EndUpdateCustomer(ByVal result As System.IAsyncResult) As CustomerService.Proxies.OperationStatus Implements CustomerService.Proxies.ICustomerService.EndUpdateCustomer
            Return MyBase.Channel.EndUpdateCustomer(result)
        End Function
        
        Private Function OnBeginUpdateCustomer(ByVal inValues() As Object, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Dim customerID As String = CType(inValues(0),String)
            Dim firstName As String = CType(inValues(1),String)
            Dim lastName As String = CType(inValues(2),String)
            Dim companyName As String = CType(inValues(3),String)
            Dim emailAddress As String = CType(inValues(4),String)
            Dim phone As String = CType(inValues(5),String)
            Return CType(Me,CustomerService.Proxies.ICustomerService).BeginUpdateCustomer(customerID, firstName, lastName, companyName, emailAddress, phone, callback, asyncState)
        End Function
        
        Private Function OnEndUpdateCustomer(ByVal result As System.IAsyncResult) As Object()
            Dim retVal As CustomerService.Proxies.OperationStatus = CType(Me,CustomerService.Proxies.ICustomerService).EndUpdateCustomer(result)
            Return New Object() {retVal}
        End Function
        
        Private Sub OnUpdateCustomerCompleted(ByVal state As Object)
            If (Not (Me.UpdateCustomerCompletedEvent) Is Nothing) Then
                Dim e As InvokeAsyncCompletedEventArgs = CType(state,InvokeAsyncCompletedEventArgs)
                RaiseEvent UpdateCustomerCompleted(Me, New UpdateCustomerCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState))
            End If
        End Sub
        
        Public Overloads Sub UpdateCustomerAsync(ByVal customerID As String, ByVal firstName As String, ByVal lastName As String, ByVal companyName As String, ByVal emailAddress As String, ByVal phone As String)
            Me.UpdateCustomerAsync(customerID, firstName, lastName, companyName, emailAddress, phone, Nothing)
        End Sub
        
        Public Overloads Sub UpdateCustomerAsync(ByVal customerID As String, ByVal firstName As String, ByVal lastName As String, ByVal companyName As String, ByVal emailAddress As String, ByVal phone As String, ByVal userState As Object)
            If (Me.onBeginUpdateCustomerDelegate Is Nothing) Then
                Me.onBeginUpdateCustomerDelegate = AddressOf Me.OnBeginUpdateCustomer
            End If
            If (Me.onEndUpdateCustomerDelegate Is Nothing) Then
                Me.onEndUpdateCustomerDelegate = AddressOf Me.OnEndUpdateCustomer
            End If
            If (Me.onUpdateCustomerCompletedDelegate Is Nothing) Then
                Me.onUpdateCustomerCompletedDelegate = AddressOf Me.OnUpdateCustomerCompleted
            End If
            MyBase.InvokeAsync(Me.onBeginUpdateCustomerDelegate, New Object() {customerID, firstName, lastName, companyName, emailAddress, phone}, Me.onEndUpdateCustomerDelegate, Me.onUpdateCustomerCompletedDelegate, userState)
        End Sub
        
        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)>  _
        Function CustomerService_Proxies_ICustomerService_BeginGetCustomer(ByVal custID As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult Implements CustomerService.Proxies.ICustomerService.BeginGetCustomer
            Return MyBase.Channel.BeginGetCustomer(custID, callback, asyncState)
        End Function
        
        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)>  _
        Function CustomerService_Proxies_ICustomerService_EndGetCustomer(ByVal result As System.IAsyncResult) As CustomerService.Proxies.Customer Implements CustomerService.Proxies.ICustomerService.EndGetCustomer
            Return MyBase.Channel.EndGetCustomer(result)
        End Function
        
        Private Function OnBeginGetCustomer(ByVal inValues() As Object, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Dim custID As String = CType(inValues(0),String)
            Return CType(Me,CustomerService.Proxies.ICustomerService).BeginGetCustomer(custID, callback, asyncState)
        End Function
        
        Private Function OnEndGetCustomer(ByVal result As System.IAsyncResult) As Object()
            Dim retVal As CustomerService.Proxies.Customer = CType(Me,CustomerService.Proxies.ICustomerService).EndGetCustomer(result)
            Return New Object() {retVal}
        End Function
        
        Private Sub OnGetCustomerCompleted(ByVal state As Object)
            If (Not (Me.GetCustomerCompletedEvent) Is Nothing) Then
                Dim e As InvokeAsyncCompletedEventArgs = CType(state,InvokeAsyncCompletedEventArgs)
                RaiseEvent GetCustomerCompleted(Me, New GetCustomerCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState))
            End If
        End Sub
        
        Public Overloads Sub GetCustomerAsync(ByVal custID As String)
            Me.GetCustomerAsync(custID, Nothing)
        End Sub
        
        Public Overloads Sub GetCustomerAsync(ByVal custID As String, ByVal userState As Object)
            If (Me.onBeginGetCustomerDelegate Is Nothing) Then
                Me.onBeginGetCustomerDelegate = AddressOf Me.OnBeginGetCustomer
            End If
            If (Me.onEndGetCustomerDelegate Is Nothing) Then
                Me.onEndGetCustomerDelegate = AddressOf Me.OnEndGetCustomer
            End If
            If (Me.onGetCustomerCompletedDelegate Is Nothing) Then
                Me.onGetCustomerCompletedDelegate = AddressOf Me.OnGetCustomerCompleted
            End If
            MyBase.InvokeAsync(Me.onBeginGetCustomerDelegate, New Object() {custID}, Me.onEndGetCustomerDelegate, Me.onGetCustomerCompletedDelegate, userState)
        End Sub
        
        Private Function OnBeginOpen(ByVal inValues() As Object, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return CType(Me,System.ServiceModel.ICommunicationObject).BeginOpen(callback, asyncState)
        End Function
        
        Private Function OnEndOpen(ByVal result As System.IAsyncResult) As Object()
            CType(Me,System.ServiceModel.ICommunicationObject).EndOpen(result)
            Return Nothing
        End Function
        
        Private Sub OnOpenCompleted(ByVal state As Object)
            If (Not (Me.OpenCompletedEvent) Is Nothing) Then
                Dim e As InvokeAsyncCompletedEventArgs = CType(state,InvokeAsyncCompletedEventArgs)
                RaiseEvent OpenCompleted(Me, New System.ComponentModel.AsyncCompletedEventArgs(e.[Error], e.Cancelled, e.UserState))
            End If
        End Sub
        
        Public Overloads Sub OpenAsync()
            Me.OpenAsync(Nothing)
        End Sub
        
        Public Overloads Sub OpenAsync(ByVal userState As Object)
            If (Me.onBeginOpenDelegate Is Nothing) Then
                Me.onBeginOpenDelegate = AddressOf Me.OnBeginOpen
            End If
            If (Me.onEndOpenDelegate Is Nothing) Then
                Me.onEndOpenDelegate = AddressOf Me.OnEndOpen
            End If
            If (Me.onOpenCompletedDelegate Is Nothing) Then
                Me.onOpenCompletedDelegate = AddressOf Me.OnOpenCompleted
            End If
            MyBase.InvokeAsync(Me.onBeginOpenDelegate, Nothing, Me.onEndOpenDelegate, Me.onOpenCompletedDelegate, userState)
        End Sub
        
        Private Function OnBeginClose(ByVal inValues() As Object, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return CType(Me,System.ServiceModel.ICommunicationObject).BeginClose(callback, asyncState)
        End Function
        
        Private Function OnEndClose(ByVal result As System.IAsyncResult) As Object()
            CType(Me,System.ServiceModel.ICommunicationObject).EndClose(result)
            Return Nothing
        End Function
        
        Private Sub OnCloseCompleted(ByVal state As Object)
            If (Not (Me.CloseCompletedEvent) Is Nothing) Then
                Dim e As InvokeAsyncCompletedEventArgs = CType(state,InvokeAsyncCompletedEventArgs)
                RaiseEvent CloseCompleted(Me, New System.ComponentModel.AsyncCompletedEventArgs(e.[Error], e.Cancelled, e.UserState))
            End If
        End Sub
        
        Public Overloads Sub CloseAsync()
            Me.CloseAsync(Nothing)
        End Sub
        
        Public Overloads Sub CloseAsync(ByVal userState As Object)
            If (Me.onBeginCloseDelegate Is Nothing) Then
                Me.onBeginCloseDelegate = AddressOf Me.OnBeginClose
            End If
            If (Me.onEndCloseDelegate Is Nothing) Then
                Me.onEndCloseDelegate = AddressOf Me.OnEndClose
            End If
            If (Me.onCloseCompletedDelegate Is Nothing) Then
                Me.onCloseCompletedDelegate = AddressOf Me.OnCloseCompleted
            End If
            MyBase.InvokeAsync(Me.onBeginCloseDelegate, Nothing, Me.onEndCloseDelegate, Me.onCloseCompletedDelegate, userState)
        End Sub
        
        Protected Overrides Function CreateChannel() As CustomerService.Proxies.ICustomerService
            Return New CustomerServiceClientChannel(Me)
        End Function
        
        Private Class CustomerServiceClientChannel
            Inherits ChannelBase(Of CustomerService.Proxies.ICustomerService)
            Implements CustomerService.Proxies.ICustomerService
            
            Public Sub New(ByVal client As System.ServiceModel.ClientBase(Of CustomerService.Proxies.ICustomerService))
                MyBase.New(client)
            End Sub
            
            Public Function BeginGetCustomers(ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult Implements CustomerService.Proxies.ICustomerService.BeginGetCustomers
                Dim _args((0) - 1) As Object
                Dim _result As System.IAsyncResult = MyBase.BeginInvoke("GetCustomers", _args, callback, asyncState)
                Return _result
            End Function
            
            Public Function EndGetCustomers(ByVal result As System.IAsyncResult) As System.Collections.ObjectModel.ObservableCollection(Of CustomerService.Proxies.Customer) Implements CustomerService.Proxies.ICustomerService.EndGetCustomers
                Dim _args((0) - 1) As Object
                Dim _result As System.Collections.ObjectModel.ObservableCollection(Of CustomerService.Proxies.Customer) = CType(MyBase.EndInvoke("GetCustomers", _args, result),System.Collections.ObjectModel.ObservableCollection(Of CustomerService.Proxies.Customer))
                Return _result
            End Function
            
            Public Function BeginSaveCustomer(ByVal customer As CustomerService.Proxies.Customer, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult Implements CustomerService.Proxies.ICustomerService.BeginSaveCustomer
                Dim _args((1) - 1) As Object
                _args(0) = customer
                Dim _result As System.IAsyncResult = MyBase.BeginInvoke("SaveCustomer", _args, callback, asyncState)
                Return _result
            End Function
            
            Public Function EndSaveCustomer(ByVal result As System.IAsyncResult) As CustomerService.Proxies.OperationStatus Implements CustomerService.Proxies.ICustomerService.EndSaveCustomer
                Dim _args((0) - 1) As Object
                Dim _result As CustomerService.Proxies.OperationStatus = CType(MyBase.EndInvoke("SaveCustomer", _args, result),CustomerService.Proxies.OperationStatus)
                Return _result
            End Function
            
            Public Function BeginDeleteCustomer(ByVal custID As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult Implements CustomerService.Proxies.ICustomerService.BeginDeleteCustomer
                Dim _args((1) - 1) As Object
                _args(0) = custID
                Dim _result As System.IAsyncResult = MyBase.BeginInvoke("DeleteCustomer", _args, callback, asyncState)
                Return _result
            End Function
            
            Public Function EndDeleteCustomer(ByVal result As System.IAsyncResult) As CustomerService.Proxies.OperationStatus Implements CustomerService.Proxies.ICustomerService.EndDeleteCustomer
                Dim _args((0) - 1) As Object
                Dim _result As CustomerService.Proxies.OperationStatus = CType(MyBase.EndInvoke("DeleteCustomer", _args, result),CustomerService.Proxies.OperationStatus)
                Return _result
            End Function
            
            Public Function BeginUpdateCustomer(ByVal customerID As String, ByVal firstName As String, ByVal lastName As String, ByVal companyName As String, ByVal emailAddress As String, ByVal phone As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult Implements CustomerService.Proxies.ICustomerService.BeginUpdateCustomer
                Dim _args((6) - 1) As Object
                _args(0) = customerID
                _args(1) = firstName
                _args(2) = lastName
                _args(3) = companyName
                _args(4) = emailAddress
                _args(5) = phone
                Dim _result As System.IAsyncResult = MyBase.BeginInvoke("UpdateCustomer", _args, callback, asyncState)
                Return _result
            End Function
            
            Public Function EndUpdateCustomer(ByVal result As System.IAsyncResult) As CustomerService.Proxies.OperationStatus Implements CustomerService.Proxies.ICustomerService.EndUpdateCustomer
                Dim _args((0) - 1) As Object
                Dim _result As CustomerService.Proxies.OperationStatus = CType(MyBase.EndInvoke("UpdateCustomer", _args, result),CustomerService.Proxies.OperationStatus)
                Return _result
            End Function
            
            Public Function BeginGetCustomer(ByVal custID As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult Implements CustomerService.Proxies.ICustomerService.BeginGetCustomer
                Dim _args((1) - 1) As Object
                _args(0) = custID
                Dim _result As System.IAsyncResult = MyBase.BeginInvoke("GetCustomer", _args, callback, asyncState)
                Return _result
            End Function
            
            Public Function EndGetCustomer(ByVal result As System.IAsyncResult) As CustomerService.Proxies.Customer Implements CustomerService.Proxies.ICustomerService.EndGetCustomer
                Dim _args((0) - 1) As Object
                Dim _result As CustomerService.Proxies.Customer = CType(MyBase.EndInvoke("GetCustomer", _args, result),CustomerService.Proxies.Customer)
                Return _result
            End Function
        End Class
    End Class
End Namespace
