// ----------------------------------------------------------------------------------
// Microsoft Developer & Platform Evangelism
// 
// Copyright (c) Microsoft Corporation. All rights reserved.
// 
// THIS CODE AND INFORMATION ARE PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND, 
// EITHER EXPRESSED OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE IMPLIED WARRANTIES 
// OF MERCHANTABILITY AND/OR FITNESS FOR A PARTICULAR PURPOSE.
// ----------------------------------------------------------------------------------
// The example companies, organizations, products, domain names,
// e-mail addresses, logos, people, places, and events depicted
// herein are fictitious.  No association with any real company,
// organization, product, domain name, email address, logo, person,
// places, or events is intended or should be inferred.
// ----------------------------------------------------------------------------------

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data.Common;
using System.Data.EntityClient;
using System.Data.Metadata.Edm;
using System.Data.Objects.DataClasses;
using System.Data.Objects;
using System.Data;
using System.Diagnostics;
using System.Globalization;
using System.Linq;

namespace CustomerService.Model
{
    public partial class AdventureWorksLT_DataEntities : ObjectContext
    {
        public const string ConnectionString = "name=AdventureWorksLT_DataEntities";
        public const string ContainerName = "AdventureWorksLT_DataEntities";
    
        #region Constructors
    
        public AdventureWorksLT_DataEntities()
            : base(ConnectionString, ContainerName)
        {
            Initialize();
        }
    
        public AdventureWorksLT_DataEntities(string connectionString)
            : base(connectionString, ContainerName)
        {
            Initialize();
        }
    
        public AdventureWorksLT_DataEntities(EntityConnection connection)
            : base(connection, ContainerName)
        {
            Initialize();
        }
    
        private void Initialize()
        {
            // Creating proxies requires the use of the ProxyDataContractResolver and
            // may allow lazy loading which can expand the loaded graph during serialization.
            ContextOptions.ProxyCreationEnabled = false;
            ObjectMaterialized += new ObjectMaterializedEventHandler(HandleObjectMaterialized);
        }
    
        private void HandleObjectMaterialized(object sender, ObjectMaterializedEventArgs e)
        {
            var entity = e.Entity as IObjectWithChangeTracker;
            if (entity != null)
            {
                bool changeTrackingEnabled = entity.ChangeTracker.ChangeTrackingEnabled;
                try
                {
                    entity.MarkAsUnchanged();
                }
                finally
                {
                    entity.ChangeTracker.ChangeTrackingEnabled = changeTrackingEnabled;
                }
                this.StoreReferenceKeyValues(entity);
            }
        }
    
        #endregion
    
        #region ObjectSet Properties
    
        public ObjectSet<Address> Addresses
        {
            get { return _addresses  ?? (_addresses = CreateObjectSet<Address>("Addresses")); }
        }
        private ObjectSet<Address> _addresses;
    
        public ObjectSet<Customer> Customers
        {
            get { return _customers  ?? (_customers = CreateObjectSet<Customer>("Customers")); }
        }
        private ObjectSet<Customer> _customers;
    
        public ObjectSet<CustomerAddress> CustomerAddresses
        {
            get { return _customerAddresses  ?? (_customerAddresses = CreateObjectSet<CustomerAddress>("CustomerAddresses")); }
        }
        private ObjectSet<CustomerAddress> _customerAddresses;
    
        public ObjectSet<Product> Products
        {
            get { return _products  ?? (_products = CreateObjectSet<Product>("Products")); }
        }
        private ObjectSet<Product> _products;
    
        public ObjectSet<ProductCategory> ProductCategories
        {
            get { return _productCategories  ?? (_productCategories = CreateObjectSet<ProductCategory>("ProductCategories")); }
        }
        private ObjectSet<ProductCategory> _productCategories;
    
        public ObjectSet<ProductDescription> ProductDescriptions
        {
            get { return _productDescriptions  ?? (_productDescriptions = CreateObjectSet<ProductDescription>("ProductDescriptions")); }
        }
        private ObjectSet<ProductDescription> _productDescriptions;
    
        public ObjectSet<ProductModel> ProductModels
        {
            get { return _productModels  ?? (_productModels = CreateObjectSet<ProductModel>("ProductModels")); }
        }
        private ObjectSet<ProductModel> _productModels;
    
        public ObjectSet<ProductModelProductDescription> ProductModelProductDescriptions
        {
            get { return _productModelProductDescriptions  ?? (_productModelProductDescriptions = CreateObjectSet<ProductModelProductDescription>("ProductModelProductDescriptions")); }
        }
        private ObjectSet<ProductModelProductDescription> _productModelProductDescriptions;
    
        public ObjectSet<SalesOrderDetail> SalesOrderDetails
        {
            get { return _salesOrderDetails  ?? (_salesOrderDetails = CreateObjectSet<SalesOrderDetail>("SalesOrderDetails")); }
        }
        private ObjectSet<SalesOrderDetail> _salesOrderDetails;
    
        public ObjectSet<SalesOrderHeader> SalesOrderHeaders
        {
            get { return _salesOrderHeaders  ?? (_salesOrderHeaders = CreateObjectSet<SalesOrderHeader>("SalesOrderHeaders")); }
        }
        private ObjectSet<SalesOrderHeader> _salesOrderHeaders;

        #endregion
    }
}
