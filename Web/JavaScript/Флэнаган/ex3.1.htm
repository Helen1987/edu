<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" >
<head>
    <title>ѕример 3.1</title>
</head>
<body>	
	<script type="text/javascript">
	    // ѕервой рассматриваетс€ операци€ копировани€ по значению
		debugger
        var n = 1; // ѕеременна€ n хранит значение 1
        var m = n; //  опирование по значению: переменна€ m хранит другое значение 1
        // ƒанна€ функци€ используетс€ дл€ иллюстрации операции передачи величины по значению
        //  ак вы увидите, функци€ работает не совсем так, как хотелось бы
        function add_to_total(total, x)
        {
            total = total + x; // Ёта строка измен€ет лишь внутреннюю копию total
        }
        // “еперь производитс€ обращение к функции, которой передаютс€ по значению числа,
        // содержащиес€ в переменных n и m.  опи€ значени€ из переменной n внутри функции
        // доступна под именем total. ‘ункци€ складывает копии значений переменных m и n,
        // записыва€ результат в копию значени€ переменной n. ќднако это не оказывает
        // никакого вли€ни€ на оригинальное значение переменной n за пределами функции.
        // “аким образом, в результате вызова этой функции мы не получаем никаких изменений.
        add_to_total(n, m);
        // —ейчас мы проверим операцию сравнени€ по значению.
        // ¬ следующей строке программы литерал 1 представл€ет собой совершенно
        // независимое числовое значение, "зашитое" в текст программы. ћы сравниваем
        // его со значением, хран€щимс€ в переменной n. ¬ данном случае, чтобы
        // убедитьс€ в равенстве двух чисел, выполн€етс€ их побайтовое сравнение.
        if (n == 1) m = 2; // n содержит то же значение, что и литерал 1;
        // таким образом в переменную m будет записано значение 2
	</script>
</body>
</html>
